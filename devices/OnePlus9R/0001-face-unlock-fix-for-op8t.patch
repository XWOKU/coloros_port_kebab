From 7f1221f5799e624cf22c67c173fff6e0ba763439 Mon Sep 17 00:00:00 2001
From: Bruce Teng <torai.d.l@outlook.com>
Date: Tue, 3 Dec 2024 15:19:56 +0800
Subject: [PATCH] Face unlock fix for op8t

---
 .../biometrics/face/AcquiredInfo.smali        |   62 +
 .../face/AuthenticationFrame$1.smali          |   84 +
 .../biometrics/face/AuthenticationFrame.smali |  261 +++
 .../biometrics/face/BaseFrame$1.smali         |   84 +
 .../hardware/biometrics/face/BaseFrame.smali  |  453 ++++
 .../hardware/biometrics/face/Cell$1.smali     |   84 +
 .../hardware/biometrics/face/Cell.smali       |  319 +++
 .../biometrics/face/EnrollmentFrame$1.smali   |   84 +
 .../biometrics/face/EnrollmentFrame.smali     |  362 ++++
 .../biometrics/face/EnrollmentStage.smali     |   22 +
 .../face/EnrollmentStageConfig$1.smali        |   84 +
 .../face/EnrollmentStageConfig.smali          |  352 ++++
 .../biometrics/face/EnrollmentType.smali      |   12 +
 .../hardware/biometrics/face/Error.smali      |   26 +
 .../biometrics/face/FaceSensorType.smali      |   14 +
 .../hardware/biometrics/face/Feature.smali    |   14 +
 .../biometrics/face/IFace$Default.smali       |   85 +
 .../biometrics/face/IFace$Stub$Proxy.smali    |  445 ++++
 .../hardware/biometrics/face/IFace$Stub.smali |  296 +++
 .../hardware/biometrics/face/IFace.smali      |   78 +
 .../biometrics/face/ISession$Default.smali    |  287 +++
 .../biometrics/face/ISession$Stub$Proxy.smali | 1824 ++++++++++++++++
 .../biometrics/face/ISession$Stub.smali       |  774 +++++++
 .../hardware/biometrics/face/ISession.smali   |  206 ++
 .../face/ISessionCallback$Default.smali       |  285 +++
 .../face/ISessionCallback$Stub$Proxy.smali    | 1829 +++++++++++++++++
 .../face/ISessionCallback$Stub.smali          |  710 +++++++
 .../biometrics/face/ISessionCallback.smali    |  214 ++
 .../biometrics/face/SensorProps$1.smali       |   84 +
 .../biometrics/face/SensorProps.smali         |  662 ++++++
 .../server/biometrics/SensorConfig.smali      |    2 +-
 ...iceWrapper$$ExternalSyntheticLambda0.smali |   12 +-
 .../face/FaceService$FaceServiceWrapper.smali |  633 +++++-
 .../biometrics/sensors/face/FaceService.smali |   18 +
 34 files changed, 10732 insertions(+), 29 deletions(-)
 create mode 100644 smali/classes/android/hardware/biometrics/face/AcquiredInfo.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/AuthenticationFrame$1.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/AuthenticationFrame.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/BaseFrame$1.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/BaseFrame.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/Cell$1.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/Cell.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/EnrollmentFrame$1.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/EnrollmentFrame.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/EnrollmentStage.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/EnrollmentStageConfig$1.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/EnrollmentStageConfig.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/EnrollmentType.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/Error.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/FaceSensorType.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/Feature.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/IFace$Default.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/IFace$Stub$Proxy.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/IFace$Stub.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/IFace.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/ISession$Default.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/ISession$Stub$Proxy.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/ISession$Stub.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/ISession.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/ISessionCallback$Default.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/ISessionCallback$Stub$Proxy.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/ISessionCallback$Stub.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/ISessionCallback.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/SensorProps$1.smali
 create mode 100644 smali/classes/android/hardware/biometrics/face/SensorProps.smali

diff --git a/smali/classes/android/hardware/biometrics/face/AcquiredInfo.smali b/smali/classes/android/hardware/biometrics/face/AcquiredInfo.smali
new file mode 100644
index 00000000..5a06ecc5
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/AcquiredInfo.smali
@@ -0,0 +1,62 @@
+.class public interface abstract annotation Landroid/hardware/biometrics/face/AcquiredInfo;
+.super Ljava/lang/Object;
+.source "AcquiredInfo.java"
+
+# interfaces
+.implements Ljava/lang/annotation/Annotation;
+
+
+# static fields
+.field public static final DARK_GLASSES_DETECTED:B = 0x19t
+
+.field public static final FACE_OBSCURED:B = 0x14t
+
+.field public static final FACE_TOO_HIGH:B = 0x7t
+
+.field public static final FACE_TOO_LEFT:B = 0xat
+
+.field public static final FACE_TOO_LOW:B = 0x8t
+
+.field public static final FACE_TOO_RIGHT:B = 0x9t
+
+.field public static final FIRST_FRAME_RECEIVED:B = 0x18t
+
+.field public static final GOOD:B = 0x1t
+
+.field public static final INSUFFICIENT:B = 0x2t
+
+.field public static final MOUTH_COVERING_DETECTED:B = 0x1at
+
+.field public static final NOT_DETECTED:B = 0xct
+
+.field public static final PAN_TOO_EXTREME:B = 0x11t
+
+.field public static final POOR_GAZE:B = 0xbt
+
+.field public static final RECALIBRATE:B = 0xet
+
+.field public static final ROLL_TOO_EXTREME:B = 0x13t
+
+.field public static final SENSOR_DIRTY:B = 0x16t
+
+.field public static final START:B = 0x15t
+
+.field public static final TILT_TOO_EXTREME:B = 0x12t
+
+.field public static final TOO_BRIGHT:B = 0x3t
+
+.field public static final TOO_CLOSE:B = 0x5t
+
+.field public static final TOO_DARK:B = 0x4t
+
+.field public static final TOO_DIFFERENT:B = 0xft
+
+.field public static final TOO_FAR:B = 0x6t
+
+.field public static final TOO_MUCH_MOTION:B = 0xdt
+
+.field public static final TOO_SIMILAR:B = 0x10t
+
+.field public static final UNKNOWN:B = 0x0t
+
+.field public static final VENDOR:B = 0x17t
diff --git a/smali/classes/android/hardware/biometrics/face/AuthenticationFrame$1.smali b/smali/classes/android/hardware/biometrics/face/AuthenticationFrame$1.smali
new file mode 100644
index 00000000..bcc2d98f
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/AuthenticationFrame$1.smali
@@ -0,0 +1,84 @@
+.class Landroid/hardware/biometrics/face/AuthenticationFrame$1;
+.super Ljava/lang/Object;
+.source "AuthenticationFrame.java"
+
+# interfaces
+.implements Landroid/os/Parcelable$Creator;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/AuthenticationFrame;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+.annotation system Ldalvik/annotation/Signature;
+    value = {
+        "Ljava/lang/Object;",
+        "Landroid/os/Parcelable$Creator<",
+        "Landroid/hardware/biometrics/face/AuthenticationFrame;",
+        ">;"
+    }
+.end annotation
+
+
+# direct methods
+.method constructor <init>()V
+    .locals 0
+
+    .line 10
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/AuthenticationFrame;
+    .locals 0
+
+    .line 13
+    new-instance p0, Landroid/hardware/biometrics/face/AuthenticationFrame;
+
+    invoke-direct {p0}, Landroid/hardware/biometrics/face/AuthenticationFrame;-><init>()V
+
+    .line 14
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/AuthenticationFrame;->readFromParcel(Landroid/os/Parcel;)V
+
+    return-object p0
+.end method
+
+.method public bridge synthetic createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+    .locals 0
+
+    .line 10
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/AuthenticationFrame$1;->createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/AuthenticationFrame;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public newArray(I)[Landroid/hardware/biometrics/face/AuthenticationFrame;
+    .locals 0
+
+    .line 19
+    new-array p0, p1, [Landroid/hardware/biometrics/face/AuthenticationFrame;
+
+    return-object p0
+.end method
+
+.method public bridge synthetic newArray(I)[Ljava/lang/Object;
+    .locals 0
+
+    .line 10
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/AuthenticationFrame$1;->newArray(I)[Landroid/hardware/biometrics/face/AuthenticationFrame;
+
+    move-result-object p0
+
+    return-object p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/AuthenticationFrame.smali b/smali/classes/android/hardware/biometrics/face/AuthenticationFrame.smali
new file mode 100644
index 00000000..e9fdaf58
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/AuthenticationFrame.smali
@@ -0,0 +1,261 @@
+.class public Landroid/hardware/biometrics/face/AuthenticationFrame;
+.super Ljava/lang/Object;
+.source "AuthenticationFrame.java"
+
+# interfaces
+.implements Landroid/os/Parcelable;
+
+
+# static fields
+.field public static final CREATOR:Landroid/os/Parcelable$Creator;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/Parcelable$Creator<",
+            "Landroid/hardware/biometrics/face/AuthenticationFrame;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+
+# instance fields
+.field public data:Landroid/hardware/biometrics/face/BaseFrame;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 1
+
+    .line 10
+    new-instance v0, Landroid/hardware/biometrics/face/AuthenticationFrame$1;
+
+    invoke-direct {v0}, Landroid/hardware/biometrics/face/AuthenticationFrame$1;-><init>()V
+
+    sput-object v0, Landroid/hardware/biometrics/face/AuthenticationFrame;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .locals 0
+
+    .line 5
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method private describeContents(Ljava/lang/Object;)I
+    .locals 1
+
+    const/4 p0, 0x0
+
+    if-nez p1, :cond_0
+
+    return p0
+
+    .line 55
+    :cond_0
+    instance-of v0, p1, Landroid/os/Parcelable;
+
+    if-eqz v0, :cond_1
+
+    .line 56
+    check-cast p1, Landroid/os/Parcelable;
+
+    invoke-interface {p1}, Landroid/os/Parcelable;->describeContents()I
+
+    move-result p0
+
+    :cond_1
+    return p0
+.end method
+
+
+# virtual methods
+.method public describeContents()I
+    .locals 1
+
+    .line 50
+    iget-object v0, p0, Landroid/hardware/biometrics/face/AuthenticationFrame;->data:Landroid/hardware/biometrics/face/BaseFrame;
+
+    invoke-direct {p0, v0}, Landroid/hardware/biometrics/face/AuthenticationFrame;->describeContents(Ljava/lang/Object;)I
+
+    move-result p0
+
+    or-int/lit8 p0, p0, 0x0
+
+    return p0
+.end method
+
+.method public final getStability()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x1
+
+    return p0
+.end method
+
+.method public final readFromParcel(Landroid/os/Parcel;)V
+    .locals 5
+
+    .line 34
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    .line 35
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v1
+
+    const/4 v2, 0x4
+
+    const-string v3, "Overflow in the size of parcelable"
+
+    const v4, 0x7fffffff
+
+    if-lt v1, v2, :cond_3
+
+    .line 38
+    :try_start_0
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_1
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_0
+
+    add-int/2addr v0, v1
+
+    .line 44
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 42
+    :cond_0
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 39
+    :cond_1
+    :try_start_1
+    sget-object v2, Landroid/hardware/biometrics/face/BaseFrame;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p1, v2}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/hardware/biometrics/face/BaseFrame;
+
+    iput-object v2, p0, Landroid/hardware/biometrics/face/AuthenticationFrame;->data:Landroid/hardware/biometrics/face/BaseFrame;
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_2
+
+    add-int/2addr v0, v1
+
+    .line 44
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 42
+    :cond_2
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :catchall_0
+    move-exception p0
+
+    goto :goto_0
+
+    .line 37
+    :cond_3
+    :try_start_2
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    const-string v2, "Parcelable too small"
+
+    invoke-direct {p0, v2}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_0
+
+    :goto_0
+    sub-int/2addr v4, v1
+
+    if-le v0, v4, :cond_4
+
+    .line 42
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :cond_4
+    add-int/2addr v0, v1
+
+    .line 44
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    .line 45
+    throw p0
+.end method
+
+.method public final writeToParcel(Landroid/os/Parcel;I)V
+    .locals 2
+
+    .line 24
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    const/4 v1, 0x0
+
+    .line 25
+    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 26
+    iget-object p0, p0, Landroid/hardware/biometrics/face/AuthenticationFrame;->data:Landroid/hardware/biometrics/face/BaseFrame;
+
+    invoke-virtual {p1, p0, p2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 27
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result p0
+
+    .line 28
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    sub-int p2, p0, v0
+
+    .line 29
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 30
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/BaseFrame$1.smali b/smali/classes/android/hardware/biometrics/face/BaseFrame$1.smali
new file mode 100644
index 00000000..73795bf8
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/BaseFrame$1.smali
@@ -0,0 +1,84 @@
+.class Landroid/hardware/biometrics/face/BaseFrame$1;
+.super Ljava/lang/Object;
+.source "BaseFrame.java"
+
+# interfaces
+.implements Landroid/os/Parcelable$Creator;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/BaseFrame;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+.annotation system Ldalvik/annotation/Signature;
+    value = {
+        "Ljava/lang/Object;",
+        "Landroid/os/Parcelable$Creator<",
+        "Landroid/hardware/biometrics/face/BaseFrame;",
+        ">;"
+    }
+.end annotation
+
+
+# direct methods
+.method constructor <init>()V
+    .locals 0
+
+    .line 15
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/BaseFrame;
+    .locals 0
+
+    .line 18
+    new-instance p0, Landroid/hardware/biometrics/face/BaseFrame;
+
+    invoke-direct {p0}, Landroid/hardware/biometrics/face/BaseFrame;-><init>()V
+
+    .line 19
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/BaseFrame;->readFromParcel(Landroid/os/Parcel;)V
+
+    return-object p0
+.end method
+
+.method public bridge synthetic createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+    .locals 0
+
+    .line 15
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/BaseFrame$1;->createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/BaseFrame;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public newArray(I)[Landroid/hardware/biometrics/face/BaseFrame;
+    .locals 0
+
+    .line 24
+    new-array p0, p1, [Landroid/hardware/biometrics/face/BaseFrame;
+
+    return-object p0
+.end method
+
+.method public bridge synthetic newArray(I)[Ljava/lang/Object;
+    .locals 0
+
+    .line 15
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/BaseFrame$1;->newArray(I)[Landroid/hardware/biometrics/face/BaseFrame;
+
+    move-result-object p0
+
+    return-object p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/BaseFrame.smali b/smali/classes/android/hardware/biometrics/face/BaseFrame.smali
new file mode 100644
index 00000000..e3b5c00c
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/BaseFrame.smali
@@ -0,0 +1,453 @@
+.class public Landroid/hardware/biometrics/face/BaseFrame;
+.super Ljava/lang/Object;
+.source "BaseFrame.java"
+
+# interfaces
+.implements Landroid/os/Parcelable;
+
+
+# static fields
+.field public static final CREATOR:Landroid/os/Parcelable$Creator;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/Parcelable$Creator<",
+            "Landroid/hardware/biometrics/face/BaseFrame;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+
+# instance fields
+.field public acquiredInfo:B
+
+.field public distance:F
+
+.field public isCancellable:Z
+
+.field public pan:F
+
+.field public tilt:F
+
+.field public vendorCode:I
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 1
+
+    .line 15
+    new-instance v0, Landroid/hardware/biometrics/face/BaseFrame$1;
+
+    invoke-direct {v0}, Landroid/hardware/biometrics/face/BaseFrame$1;-><init>()V
+
+    sput-object v0, Landroid/hardware/biometrics/face/BaseFrame;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .locals 2
+
+    .line 5
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/4 v0, 0x0
+
+    .line 7
+    iput-byte v0, p0, Landroid/hardware/biometrics/face/BaseFrame;->acquiredInfo:B
+
+    .line 8
+    iput v0, p0, Landroid/hardware/biometrics/face/BaseFrame;->vendorCode:I
+
+    const/4 v1, 0x0
+
+    .line 9
+    iput v1, p0, Landroid/hardware/biometrics/face/BaseFrame;->pan:F
+
+    .line 10
+    iput v1, p0, Landroid/hardware/biometrics/face/BaseFrame;->tilt:F
+
+    .line 11
+    iput v1, p0, Landroid/hardware/biometrics/face/BaseFrame;->distance:F
+
+    .line 12
+    iput-boolean v0, p0, Landroid/hardware/biometrics/face/BaseFrame;->isCancellable:Z
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public describeContents()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x0
+
+    return p0
+.end method
+
+.method public final getStability()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x1
+
+    return p0
+.end method
+
+.method public final readFromParcel(Landroid/os/Parcel;)V
+    .locals 5
+
+    .line 44
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    .line 45
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v1
+
+    const/4 v2, 0x4
+
+    const-string v3, "Overflow in the size of parcelable"
+
+    const v4, 0x7fffffff
+
+    if-lt v1, v2, :cond_d
+
+    .line 48
+    :try_start_0
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_1
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_0
+
+    :goto_0
+    add-int/2addr v0, v1
+
+    .line 64
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 62
+    :cond_0
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 49
+    :cond_1
+    :try_start_1
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v2
+
+    iput-byte v2, p0, Landroid/hardware/biometrics/face/BaseFrame;->acquiredInfo:B
+
+    .line 50
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_3
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_2
+
+    goto :goto_0
+
+    .line 62
+    :cond_2
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 51
+    :cond_3
+    :try_start_2
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/BaseFrame;->vendorCode:I
+
+    .line 52
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_5
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_4
+
+    goto :goto_0
+
+    .line 62
+    :cond_4
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 53
+    :cond_5
+    :try_start_3
+    invoke-virtual {p1}, Landroid/os/Parcel;->readFloat()F
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/BaseFrame;->pan:F
+
+    .line 54
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_3
+    .catchall {:try_start_3 .. :try_end_3} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_7
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_6
+
+    goto :goto_0
+
+    .line 62
+    :cond_6
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 55
+    :cond_7
+    :try_start_4
+    invoke-virtual {p1}, Landroid/os/Parcel;->readFloat()F
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/BaseFrame;->tilt:F
+
+    .line 56
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_4
+    .catchall {:try_start_4 .. :try_end_4} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_9
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_8
+
+    goto :goto_0
+
+    .line 62
+    :cond_8
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 57
+    :cond_9
+    :try_start_5
+    invoke-virtual {p1}, Landroid/os/Parcel;->readFloat()F
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/BaseFrame;->distance:F
+
+    .line 58
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_5
+    .catchall {:try_start_5 .. :try_end_5} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_b
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_a
+
+    goto :goto_0
+
+    .line 62
+    :cond_a
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 59
+    :cond_b
+    :try_start_6
+    invoke-virtual {p1}, Landroid/os/Parcel;->readBoolean()Z
+
+    move-result v2
+
+    iput-boolean v2, p0, Landroid/hardware/biometrics/face/BaseFrame;->isCancellable:Z
+    :try_end_6
+    .catchall {:try_start_6 .. :try_end_6} :catchall_0
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_c
+
+    add-int/2addr v0, v1
+
+    .line 64
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 62
+    :cond_c
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :catchall_0
+    move-exception p0
+
+    goto :goto_1
+
+    .line 47
+    :cond_d
+    :try_start_7
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    const-string v2, "Parcelable too small"
+
+    invoke-direct {p0, v2}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_7
+    .catchall {:try_start_7 .. :try_end_7} :catchall_0
+
+    :goto_1
+    sub-int/2addr v4, v1
+
+    if-le v0, v4, :cond_e
+
+    .line 62
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :cond_e
+    add-int/2addr v0, v1
+
+    .line 64
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    .line 65
+    throw p0
+.end method
+
+.method public final writeToParcel(Landroid/os/Parcel;I)V
+    .locals 1
+
+    .line 29
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result p2
+
+    const/4 v0, 0x0
+
+    .line 30
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 31
+    iget-byte v0, p0, Landroid/hardware/biometrics/face/BaseFrame;->acquiredInfo:B
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 32
+    iget v0, p0, Landroid/hardware/biometrics/face/BaseFrame;->vendorCode:I
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 33
+    iget v0, p0, Landroid/hardware/biometrics/face/BaseFrame;->pan:F
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeFloat(F)V
+
+    .line 34
+    iget v0, p0, Landroid/hardware/biometrics/face/BaseFrame;->tilt:F
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeFloat(F)V
+
+    .line 35
+    iget v0, p0, Landroid/hardware/biometrics/face/BaseFrame;->distance:F
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeFloat(F)V
+
+    .line 36
+    iget-boolean p0, p0, Landroid/hardware/biometrics/face/BaseFrame;->isCancellable:Z
+
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->writeBoolean(Z)V
+
+    .line 37
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result p0
+
+    .line 38
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    sub-int p2, p0, p2
+
+    .line 39
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 40
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/Cell$1.smali b/smali/classes/android/hardware/biometrics/face/Cell$1.smali
new file mode 100644
index 00000000..fc733e8c
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/Cell$1.smali
@@ -0,0 +1,84 @@
+.class Landroid/hardware/biometrics/face/Cell$1;
+.super Ljava/lang/Object;
+.source "Cell.java"
+
+# interfaces
+.implements Landroid/os/Parcelable$Creator;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/Cell;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+.annotation system Ldalvik/annotation/Signature;
+    value = {
+        "Ljava/lang/Object;",
+        "Landroid/os/Parcelable$Creator<",
+        "Landroid/hardware/biometrics/face/Cell;",
+        ">;"
+    }
+.end annotation
+
+
+# direct methods
+.method constructor <init>()V
+    .locals 0
+
+    .line 12
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/Cell;
+    .locals 0
+
+    .line 15
+    new-instance p0, Landroid/hardware/biometrics/face/Cell;
+
+    invoke-direct {p0}, Landroid/hardware/biometrics/face/Cell;-><init>()V
+
+    .line 16
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/Cell;->readFromParcel(Landroid/os/Parcel;)V
+
+    return-object p0
+.end method
+
+.method public bridge synthetic createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+    .locals 0
+
+    .line 12
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/Cell$1;->createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/Cell;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public newArray(I)[Landroid/hardware/biometrics/face/Cell;
+    .locals 0
+
+    .line 21
+    new-array p0, p1, [Landroid/hardware/biometrics/face/Cell;
+
+    return-object p0
+.end method
+
+.method public bridge synthetic newArray(I)[Ljava/lang/Object;
+    .locals 0
+
+    .line 12
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/Cell$1;->newArray(I)[Landroid/hardware/biometrics/face/Cell;
+
+    move-result-object p0
+
+    return-object p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/Cell.smali b/smali/classes/android/hardware/biometrics/face/Cell.smali
new file mode 100644
index 00000000..384e1210
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/Cell.smali
@@ -0,0 +1,319 @@
+.class public Landroid/hardware/biometrics/face/Cell;
+.super Ljava/lang/Object;
+.source "Cell.java"
+
+# interfaces
+.implements Landroid/os/Parcelable;
+
+
+# static fields
+.field public static final CREATOR:Landroid/os/Parcelable$Creator;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/Parcelable$Creator<",
+            "Landroid/hardware/biometrics/face/Cell;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+
+# instance fields
+.field public x:I
+
+.field public y:I
+
+.field public z:I
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 1
+
+    .line 12
+    new-instance v0, Landroid/hardware/biometrics/face/Cell$1;
+
+    invoke-direct {v0}, Landroid/hardware/biometrics/face/Cell$1;-><init>()V
+
+    sput-object v0, Landroid/hardware/biometrics/face/Cell;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .locals 1
+
+    .line 5
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/4 v0, 0x0
+
+    .line 7
+    iput v0, p0, Landroid/hardware/biometrics/face/Cell;->x:I
+
+    .line 8
+    iput v0, p0, Landroid/hardware/biometrics/face/Cell;->y:I
+
+    .line 9
+    iput v0, p0, Landroid/hardware/biometrics/face/Cell;->z:I
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public describeContents()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x0
+
+    return p0
+.end method
+
+.method public final getStability()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x1
+
+    return p0
+.end method
+
+.method public final readFromParcel(Landroid/os/Parcel;)V
+    .locals 5
+
+    .line 38
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    .line 39
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v1
+
+    const/4 v2, 0x4
+
+    const-string v3, "Overflow in the size of parcelable"
+
+    const v4, 0x7fffffff
+
+    if-lt v1, v2, :cond_7
+
+    .line 42
+    :try_start_0
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_1
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_0
+
+    :goto_0
+    add-int/2addr v0, v1
+
+    .line 52
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 50
+    :cond_0
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 43
+    :cond_1
+    :try_start_1
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/Cell;->x:I
+
+    .line 44
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_3
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_2
+
+    goto :goto_0
+
+    .line 50
+    :cond_2
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 45
+    :cond_3
+    :try_start_2
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/Cell;->y:I
+
+    .line 46
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_5
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_4
+
+    goto :goto_0
+
+    .line 50
+    :cond_4
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 47
+    :cond_5
+    :try_start_3
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/Cell;->z:I
+    :try_end_3
+    .catchall {:try_start_3 .. :try_end_3} :catchall_0
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_6
+
+    add-int/2addr v0, v1
+
+    .line 52
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 50
+    :cond_6
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :catchall_0
+    move-exception p0
+
+    goto :goto_1
+
+    .line 41
+    :cond_7
+    :try_start_4
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    const-string v2, "Parcelable too small"
+
+    invoke-direct {p0, v2}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_4
+    .catchall {:try_start_4 .. :try_end_4} :catchall_0
+
+    :goto_1
+    sub-int/2addr v4, v1
+
+    if-le v0, v4, :cond_8
+
+    .line 50
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :cond_8
+    add-int/2addr v0, v1
+
+    .line 52
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    .line 53
+    throw p0
+.end method
+
+.method public final writeToParcel(Landroid/os/Parcel;I)V
+    .locals 1
+
+    .line 26
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result p2
+
+    const/4 v0, 0x0
+
+    .line 27
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 28
+    iget v0, p0, Landroid/hardware/biometrics/face/Cell;->x:I
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 29
+    iget v0, p0, Landroid/hardware/biometrics/face/Cell;->y:I
+
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 30
+    iget p0, p0, Landroid/hardware/biometrics/face/Cell;->z:I
+
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 31
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result p0
+
+    .line 32
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    sub-int p2, p0, p2
+
+    .line 33
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 34
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/EnrollmentFrame$1.smali b/smali/classes/android/hardware/biometrics/face/EnrollmentFrame$1.smali
new file mode 100644
index 00000000..af3b5e60
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/EnrollmentFrame$1.smali
@@ -0,0 +1,84 @@
+.class Landroid/hardware/biometrics/face/EnrollmentFrame$1;
+.super Ljava/lang/Object;
+.source "EnrollmentFrame.java"
+
+# interfaces
+.implements Landroid/os/Parcelable$Creator;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/EnrollmentFrame;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+.annotation system Ldalvik/annotation/Signature;
+    value = {
+        "Ljava/lang/Object;",
+        "Landroid/os/Parcelable$Creator<",
+        "Landroid/hardware/biometrics/face/EnrollmentFrame;",
+        ">;"
+    }
+.end annotation
+
+
+# direct methods
+.method constructor <init>()V
+    .locals 0
+
+    .line 12
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/EnrollmentFrame;
+    .locals 0
+
+    .line 15
+    new-instance p0, Landroid/hardware/biometrics/face/EnrollmentFrame;
+
+    invoke-direct {p0}, Landroid/hardware/biometrics/face/EnrollmentFrame;-><init>()V
+
+    .line 16
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/EnrollmentFrame;->readFromParcel(Landroid/os/Parcel;)V
+
+    return-object p0
+.end method
+
+.method public bridge synthetic createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+    .locals 0
+
+    .line 12
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/EnrollmentFrame$1;->createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/EnrollmentFrame;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public newArray(I)[Landroid/hardware/biometrics/face/EnrollmentFrame;
+    .locals 0
+
+    .line 21
+    new-array p0, p1, [Landroid/hardware/biometrics/face/EnrollmentFrame;
+
+    return-object p0
+.end method
+
+.method public bridge synthetic newArray(I)[Ljava/lang/Object;
+    .locals 0
+
+    .line 12
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/EnrollmentFrame$1;->newArray(I)[Landroid/hardware/biometrics/face/EnrollmentFrame;
+
+    move-result-object p0
+
+    return-object p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/EnrollmentFrame.smali b/smali/classes/android/hardware/biometrics/face/EnrollmentFrame.smali
new file mode 100644
index 00000000..4afc7c87
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/EnrollmentFrame.smali
@@ -0,0 +1,362 @@
+.class public Landroid/hardware/biometrics/face/EnrollmentFrame;
+.super Ljava/lang/Object;
+.source "EnrollmentFrame.java"
+
+# interfaces
+.implements Landroid/os/Parcelable;
+
+
+# static fields
+.field public static final CREATOR:Landroid/os/Parcelable$Creator;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/Parcelable$Creator<",
+            "Landroid/hardware/biometrics/face/EnrollmentFrame;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+
+# instance fields
+.field public cell:Landroid/hardware/biometrics/face/Cell;
+
+.field public data:Landroid/hardware/biometrics/face/BaseFrame;
+
+.field public stage:B
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 1
+
+    .line 12
+    new-instance v0, Landroid/hardware/biometrics/face/EnrollmentFrame$1;
+
+    invoke-direct {v0}, Landroid/hardware/biometrics/face/EnrollmentFrame$1;-><init>()V
+
+    sput-object v0, Landroid/hardware/biometrics/face/EnrollmentFrame;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .locals 1
+
+    .line 5
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/4 v0, 0x0
+
+    .line 8
+    iput-byte v0, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->stage:B
+
+    return-void
+.end method
+
+.method private describeContents(Ljava/lang/Object;)I
+    .locals 1
+
+    const/4 p0, 0x0
+
+    if-nez p1, :cond_0
+
+    return p0
+
+    .line 64
+    :cond_0
+    instance-of v0, p1, Landroid/os/Parcelable;
+
+    if-eqz v0, :cond_1
+
+    .line 65
+    check-cast p1, Landroid/os/Parcelable;
+
+    invoke-interface {p1}, Landroid/os/Parcelable;->describeContents()I
+
+    move-result p0
+
+    :cond_1
+    return p0
+.end method
+
+
+# virtual methods
+.method public describeContents()I
+    .locals 2
+
+    .line 58
+    iget-object v0, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->cell:Landroid/hardware/biometrics/face/Cell;
+
+    invoke-direct {p0, v0}, Landroid/hardware/biometrics/face/EnrollmentFrame;->describeContents(Ljava/lang/Object;)I
+
+    move-result v0
+
+    or-int/lit8 v0, v0, 0x0
+
+    .line 59
+    iget-object v1, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->data:Landroid/hardware/biometrics/face/BaseFrame;
+
+    invoke-direct {p0, v1}, Landroid/hardware/biometrics/face/EnrollmentFrame;->describeContents(Ljava/lang/Object;)I
+
+    move-result p0
+
+    or-int/2addr p0, v0
+
+    return p0
+.end method
+
+.method public final getStability()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x1
+
+    return p0
+.end method
+
+.method public final readFromParcel(Landroid/os/Parcel;)V
+    .locals 5
+
+    .line 38
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    .line 39
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v1
+
+    const/4 v2, 0x4
+
+    const-string v3, "Overflow in the size of parcelable"
+
+    const v4, 0x7fffffff
+
+    if-lt v1, v2, :cond_7
+
+    .line 42
+    :try_start_0
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_1
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_0
+
+    :goto_0
+    add-int/2addr v0, v1
+
+    .line 52
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 50
+    :cond_0
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 43
+    :cond_1
+    :try_start_1
+    sget-object v2, Landroid/hardware/biometrics/face/Cell;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p1, v2}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/hardware/biometrics/face/Cell;
+
+    iput-object v2, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->cell:Landroid/hardware/biometrics/face/Cell;
+
+    .line 44
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_3
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_2
+
+    goto :goto_0
+
+    .line 50
+    :cond_2
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 45
+    :cond_3
+    :try_start_2
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v2
+
+    iput-byte v2, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->stage:B
+
+    .line 46
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_5
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_4
+
+    goto :goto_0
+
+    .line 50
+    :cond_4
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 47
+    :cond_5
+    :try_start_3
+    sget-object v2, Landroid/hardware/biometrics/face/BaseFrame;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p1, v2}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/hardware/biometrics/face/BaseFrame;
+
+    iput-object v2, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->data:Landroid/hardware/biometrics/face/BaseFrame;
+    :try_end_3
+    .catchall {:try_start_3 .. :try_end_3} :catchall_0
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_6
+
+    add-int/2addr v0, v1
+
+    .line 52
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 50
+    :cond_6
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :catchall_0
+    move-exception p0
+
+    goto :goto_1
+
+    .line 41
+    :cond_7
+    :try_start_4
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    const-string v2, "Parcelable too small"
+
+    invoke-direct {p0, v2}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_4
+    .catchall {:try_start_4 .. :try_end_4} :catchall_0
+
+    :goto_1
+    sub-int/2addr v4, v1
+
+    if-le v0, v4, :cond_8
+
+    .line 50
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :cond_8
+    add-int/2addr v0, v1
+
+    .line 52
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    .line 53
+    throw p0
+.end method
+
+.method public final writeToParcel(Landroid/os/Parcel;I)V
+    .locals 2
+
+    .line 26
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    const/4 v1, 0x0
+
+    .line 27
+    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 28
+    iget-object v1, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->cell:Landroid/hardware/biometrics/face/Cell;
+
+    invoke-virtual {p1, v1, p2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 29
+    iget-byte v1, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->stage:B
+
+    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 30
+    iget-object p0, p0, Landroid/hardware/biometrics/face/EnrollmentFrame;->data:Landroid/hardware/biometrics/face/BaseFrame;
+
+    invoke-virtual {p1, p0, p2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 31
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result p0
+
+    .line 32
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    sub-int p2, p0, v0
+
+    .line 33
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 34
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/EnrollmentStage.smali b/smali/classes/android/hardware/biometrics/face/EnrollmentStage.smali
new file mode 100644
index 00000000..76b421cf
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/EnrollmentStage.smali
@@ -0,0 +1,22 @@
+.class public interface abstract annotation Landroid/hardware/biometrics/face/EnrollmentStage;
+.super Ljava/lang/Object;
+.source "EnrollmentStage.java"
+
+# interfaces
+.implements Ljava/lang/annotation/Annotation;
+
+
+# static fields
+.field public static final ENROLLING_MOVEMENT_1:B = 0x4t
+
+.field public static final ENROLLING_MOVEMENT_2:B = 0x5t
+
+.field public static final ENROLLMENT_FINISHED:B = 0x6t
+
+.field public static final FIRST_FRAME_RECEIVED:B = 0x1t
+
+.field public static final HOLD_STILL_IN_CENTER:B = 0x3t
+
+.field public static final UNKNOWN:B = 0x0t
+
+.field public static final WAITING_FOR_CENTERING:B = 0x2t
diff --git a/smali/classes/android/hardware/biometrics/face/EnrollmentStageConfig$1.smali b/smali/classes/android/hardware/biometrics/face/EnrollmentStageConfig$1.smali
new file mode 100644
index 00000000..9b0d557c
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/EnrollmentStageConfig$1.smali
@@ -0,0 +1,84 @@
+.class Landroid/hardware/biometrics/face/EnrollmentStageConfig$1;
+.super Ljava/lang/Object;
+.source "EnrollmentStageConfig.java"
+
+# interfaces
+.implements Landroid/os/Parcelable$Creator;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+.annotation system Ldalvik/annotation/Signature;
+    value = {
+        "Ljava/lang/Object;",
+        "Landroid/os/Parcelable$Creator<",
+        "Landroid/hardware/biometrics/face/EnrollmentStageConfig;",
+        ">;"
+    }
+.end annotation
+
+
+# direct methods
+.method constructor <init>()V
+    .locals 0
+
+    .line 11
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+    .locals 0
+
+    .line 14
+    new-instance p0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+
+    invoke-direct {p0}, Landroid/hardware/biometrics/face/EnrollmentStageConfig;-><init>()V
+
+    .line 15
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->readFromParcel(Landroid/os/Parcel;)V
+
+    return-object p0
+.end method
+
+.method public bridge synthetic createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+    .locals 0
+
+    .line 11
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/EnrollmentStageConfig$1;->createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public newArray(I)[Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+    .locals 0
+
+    .line 20
+    new-array p0, p1, [Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+
+    return-object p0
+.end method
+
+.method public bridge synthetic newArray(I)[Ljava/lang/Object;
+    .locals 0
+
+    .line 11
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/EnrollmentStageConfig$1;->newArray(I)[Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+
+    move-result-object p0
+
+    return-object p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/EnrollmentStageConfig.smali b/smali/classes/android/hardware/biometrics/face/EnrollmentStageConfig.smali
new file mode 100644
index 00000000..c9621027
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/EnrollmentStageConfig.smali
@@ -0,0 +1,352 @@
+.class public Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+.super Ljava/lang/Object;
+.source "EnrollmentStageConfig.java"
+
+# interfaces
+.implements Landroid/os/Parcelable;
+
+
+# static fields
+.field public static final CREATOR:Landroid/os/Parcelable$Creator;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/Parcelable$Creator<",
+            "Landroid/hardware/biometrics/face/EnrollmentStageConfig;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+
+# instance fields
+.field public cells:Ljava/util/List;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/List<",
+            "Landroid/hardware/biometrics/face/Cell;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field public stage:B
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 1
+
+    .line 11
+    new-instance v0, Landroid/hardware/biometrics/face/EnrollmentStageConfig$1;
+
+    invoke-direct {v0}, Landroid/hardware/biometrics/face/EnrollmentStageConfig$1;-><init>()V
+
+    sput-object v0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .locals 1
+
+    .line 5
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/4 v0, 0x0
+
+    .line 7
+    iput-byte v0, p0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->stage:B
+
+    return-void
+.end method
+
+.method private describeContents(Ljava/lang/Object;)I
+    .locals 2
+
+    const/4 v0, 0x0
+
+    if-nez p1, :cond_0
+
+    return v0
+
+    .line 59
+    :cond_0
+    instance-of v1, p1, Ljava/util/Collection;
+
+    if-eqz v1, :cond_2
+
+    .line 61
+    check-cast p1, Ljava/util/Collection;
+
+    invoke-interface {p1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object p1
+
+    :goto_0
+    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_1
+
+    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    .line 62
+    invoke-direct {p0, v1}, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->describeContents(Ljava/lang/Object;)I
+
+    move-result v1
+
+    or-int/2addr v0, v1
+
+    goto :goto_0
+
+    :cond_1
+    return v0
+
+    .line 66
+    :cond_2
+    instance-of p0, p1, Landroid/os/Parcelable;
+
+    if-eqz p0, :cond_3
+
+    .line 67
+    check-cast p1, Landroid/os/Parcelable;
+
+    invoke-interface {p1}, Landroid/os/Parcelable;->describeContents()I
+
+    move-result p0
+
+    return p0
+
+    :cond_3
+    return v0
+.end method
+
+
+# virtual methods
+.method public describeContents()I
+    .locals 1
+
+    .line 54
+    iget-object v0, p0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->cells:Ljava/util/List;
+
+    invoke-direct {p0, v0}, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->describeContents(Ljava/lang/Object;)I
+
+    move-result p0
+
+    or-int/lit8 p0, p0, 0x0
+
+    return p0
+.end method
+
+.method public final getStability()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x1
+
+    return p0
+.end method
+
+.method public final readFromParcel(Landroid/os/Parcel;)V
+    .locals 5
+
+    .line 36
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    .line 37
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v1
+
+    const/4 v2, 0x4
+
+    const-string v3, "Overflow in the size of parcelable"
+
+    const v4, 0x7fffffff
+
+    if-lt v1, v2, :cond_5
+
+    .line 40
+    :try_start_0
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_1
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_0
+
+    :goto_0
+    add-int/2addr v0, v1
+
+    .line 48
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 46
+    :cond_0
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 41
+    :cond_1
+    :try_start_1
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v2
+
+    iput-byte v2, p0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->stage:B
+
+    .line 42
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_3
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_2
+
+    goto :goto_0
+
+    .line 46
+    :cond_2
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 43
+    :cond_3
+    :try_start_2
+    sget-object v2, Landroid/hardware/biometrics/face/Cell;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p1, v2}, Landroid/os/Parcel;->createTypedArrayList(Landroid/os/Parcelable$Creator;)Ljava/util/ArrayList;
+
+    move-result-object v2
+
+    iput-object v2, p0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->cells:Ljava/util/List;
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_0
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_4
+
+    add-int/2addr v0, v1
+
+    .line 48
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 46
+    :cond_4
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :catchall_0
+    move-exception p0
+
+    goto :goto_1
+
+    .line 39
+    :cond_5
+    :try_start_3
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    const-string v2, "Parcelable too small"
+
+    invoke-direct {p0, v2}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_3
+    .catchall {:try_start_3 .. :try_end_3} :catchall_0
+
+    :goto_1
+    sub-int/2addr v4, v1
+
+    if-le v0, v4, :cond_6
+
+    .line 46
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :cond_6
+    add-int/2addr v0, v1
+
+    .line 48
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    .line 49
+    throw p0
+.end method
+
+.method public final writeToParcel(Landroid/os/Parcel;I)V
+    .locals 2
+
+    .line 25
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    const/4 v1, 0x0
+
+    .line 26
+    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 27
+    iget-byte v1, p0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->stage:B
+
+    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 28
+    iget-object p0, p0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->cells:Ljava/util/List;
+
+    invoke-virtual {p1, p0, p2}, Landroid/os/Parcel;->writeTypedList(Ljava/util/List;I)V
+
+    .line 29
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result p0
+
+    .line 30
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    sub-int p2, p0, v0
+
+    .line 31
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 32
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/EnrollmentType.smali b/smali/classes/android/hardware/biometrics/face/EnrollmentType.smali
new file mode 100644
index 00000000..7c6ccfaf
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/EnrollmentType.smali
@@ -0,0 +1,12 @@
+.class public interface abstract annotation Landroid/hardware/biometrics/face/EnrollmentType;
+.super Ljava/lang/Object;
+.source "EnrollmentType.java"
+
+# interfaces
+.implements Ljava/lang/annotation/Annotation;
+
+
+# static fields
+.field public static final ACCESSIBILITY:B = 0x1t
+
+.field public static final DEFAULT:B
diff --git a/smali/classes/android/hardware/biometrics/face/Error.smali b/smali/classes/android/hardware/biometrics/face/Error.smali
new file mode 100644
index 00000000..2dbf8a97
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/Error.smali
@@ -0,0 +1,26 @@
+.class public interface abstract annotation Landroid/hardware/biometrics/face/Error;
+.super Ljava/lang/Object;
+.source "Error.java"
+
+# interfaces
+.implements Ljava/lang/annotation/Annotation;
+
+
+# static fields
+.field public static final CANCELED:B = 0x5t
+
+.field public static final HW_UNAVAILABLE:B = 0x1t
+
+.field public static final NO_SPACE:B = 0x4t
+
+.field public static final REENROLL_REQUIRED:B = 0x8t
+
+.field public static final TIMEOUT:B = 0x3t
+
+.field public static final UNABLE_TO_PROCESS:B = 0x2t
+
+.field public static final UNABLE_TO_REMOVE:B = 0x6t
+
+.field public static final UNKNOWN:B = 0x0t
+
+.field public static final VENDOR:B = 0x7t
diff --git a/smali/classes/android/hardware/biometrics/face/FaceSensorType.smali b/smali/classes/android/hardware/biometrics/face/FaceSensorType.smali
new file mode 100644
index 00000000..e041b34c
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/FaceSensorType.smali
@@ -0,0 +1,14 @@
+.class public interface abstract annotation Landroid/hardware/biometrics/face/FaceSensorType;
+.super Ljava/lang/Object;
+.source "FaceSensorType.java"
+
+# interfaces
+.implements Ljava/lang/annotation/Annotation;
+
+
+# static fields
+.field public static final IR:B = 0x2t
+
+.field public static final RGB:B = 0x1t
+
+.field public static final UNKNOWN:B
diff --git a/smali/classes/android/hardware/biometrics/face/Feature.smali b/smali/classes/android/hardware/biometrics/face/Feature.smali
new file mode 100644
index 00000000..f347eb47
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/Feature.smali
@@ -0,0 +1,14 @@
+.class public interface abstract annotation Landroid/hardware/biometrics/face/Feature;
+.super Ljava/lang/Object;
+.source "Feature.java"
+
+# interfaces
+.implements Ljava/lang/annotation/Annotation;
+
+
+# static fields
+.field public static final DEBUG:B = 0x2t
+
+.field public static final REQUIRE_ATTENTION:B = 0x0t
+
+.field public static final REQUIRE_DIVERSE_POSES:B = 0x1t
diff --git a/smali/classes/android/hardware/biometrics/face/IFace$Default.smali b/smali/classes/android/hardware/biometrics/face/IFace$Default.smali
new file mode 100644
index 00000000..1ded6034
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/IFace$Default.smali
@@ -0,0 +1,85 @@
+.class public Landroid/hardware/biometrics/face/IFace$Default;
+.super Ljava/lang/Object;
+.source "IFace.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/IFace;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/IFace;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x9
+    name = "Default"
+.end annotation
+
+
+# direct methods
+.method public constructor <init>()V
+    .locals 0
+
+    .line 16
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public createSession(IILandroid/hardware/biometrics/face/ISessionCallback;)Landroid/hardware/biometrics/face/ISession;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public getInterfaceHash()Ljava/lang/String;
+    .locals 0
+
+    .line 0
+    const-string p0, ""
+
+    return-object p0
+.end method
+
+.method public getInterfaceVersion()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x0
+
+    return p0
+.end method
+
+.method public getSensorProps()[Landroid/hardware/biometrics/face/SensorProps;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/IFace$Stub$Proxy.smali b/smali/classes/android/hardware/biometrics/face/IFace$Stub$Proxy.smali
new file mode 100644
index 00000000..140155c2
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/IFace$Stub$Proxy.smali
@@ -0,0 +1,445 @@
+.class Landroid/hardware/biometrics/face/IFace$Stub$Proxy;
+.super Ljava/lang/Object;
+.source "IFace.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/IFace;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/IFace$Stub;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0xa
+    name = "Proxy"
+.end annotation
+
+
+# instance fields
+.field private mCachedHash:Ljava/lang/String;
+
+.field private mCachedVersion:I
+
+.field private mRemote:Landroid/os/IBinder;
+
+
+# direct methods
+.method constructor <init>(Landroid/os/IBinder;)V
+    .locals 1
+
+    .line 159
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/4 v0, -0x1
+
+    .line 162
+    iput v0, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mCachedVersion:I
+
+    const-string v0, "-1"
+
+    .line 163
+    iput-object v0, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+
+    .line 160
+    iput-object p1, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 166
+    iget-object p0, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    return-object p0
+.end method
+
+.method public createSession(IILandroid/hardware/biometrics/face/ISessionCallback;)Landroid/hardware/biometrics/face/ISession;
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 194
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 195
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 198
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 199
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 200
+    invoke-virtual {v0, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 201
+    invoke-virtual {v0, p3}, Landroid/os/Parcel;->writeStrongInterface(Landroid/os/IInterface;)V
+
+    .line 202
+    iget-object p0, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x2
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 206
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 207
+    invoke-virtual {v1}, Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
+
+    move-result-object p0
+
+    invoke-static {p0}, Landroid/hardware/biometrics/face/ISession$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/face/ISession;
+
+    move-result-object p0
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 210
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 211
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 204
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method createSession is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 210
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 211
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 212
+    throw p0
+.end method
+
+.method public getInterfaceDescriptor()Ljava/lang/String;
+    .locals 0
+
+    .line 170
+    sget-object p0, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    return-object p0
+.end method
+
+.method public declared-synchronized getInterfaceHash()Ljava/lang/String;
+    .locals 5
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    monitor-enter p0
+
+    :try_start_0
+    const-string v0, "-1"
+
+    .line 234
+    iget-object v1, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_0
+
+    .line 235
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 236
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_1
+
+    .line 238
+    :try_start_1
+    sget-object v2, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 239
+    iget-object v2, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const v3, 0xfffffe
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    .line 240
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 241
+    invoke-virtual {v1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v2
+
+    iput-object v2, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    .line 243
+    :try_start_2
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 244
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    goto :goto_0
+
+    :catchall_0
+    move-exception v2
+
+    .line 243
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 244
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 245
+    throw v2
+
+    .line 247
+    :cond_0
+    :goto_0
+    iget-object v0, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_1
+
+    monitor-exit p0
+
+    return-object v0
+
+    :catchall_1
+    move-exception v0
+
+    monitor-exit p0
+
+    throw v0
+.end method
+
+.method public getInterfaceVersion()I
+    .locals 5
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 217
+    iget v0, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mCachedVersion:I
+
+    const/4 v1, -0x1
+
+    if-ne v0, v1, :cond_0
+
+    .line 218
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 219
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 221
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 222
+    iget-object v2, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const v3, 0xffffff
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    .line 223
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 224
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mCachedVersion:I
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 226
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 227
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    goto :goto_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 226
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 227
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 228
+    throw p0
+
+    .line 230
+    :cond_0
+    :goto_0
+    iget p0, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mCachedVersion:I
+
+    return p0
+.end method
+
+.method public getSensorProps()[Landroid/hardware/biometrics/face/SensorProps;
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 174
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 175
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 178
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 179
+    iget-object p0, p0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v2, 0x1
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 183
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 184
+    sget-object p0, Landroid/hardware/biometrics/face/SensorProps;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {v1, p0}, Landroid/os/Parcel;->createTypedArray(Landroid/os/Parcelable$Creator;)[Ljava/lang/Object;
+
+    move-result-object p0
+
+    check-cast p0, [Landroid/hardware/biometrics/face/SensorProps;
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 187
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 188
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 181
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method getSensorProps is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 187
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 188
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 189
+    throw p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/IFace$Stub.smali b/smali/classes/android/hardware/biometrics/face/IFace$Stub.smali
new file mode 100644
index 00000000..38575b62
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/IFace$Stub.smali
@@ -0,0 +1,296 @@
+.class public abstract Landroid/hardware/biometrics/face/IFace$Stub;
+.super Landroid/os/Binder;
+.source "IFace.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/IFace;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/IFace;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x409
+    name = "Stub"
+.end annotation
+
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/hardware/biometrics/face/IFace$Stub$Proxy;
+    }
+.end annotation
+
+
+# static fields
+.field static final TRANSACTION_createSession:I = 0x2
+
+.field static final TRANSACTION_getInterfaceHash:I = 0xfffffe
+
+.field static final TRANSACTION_getInterfaceVersion:I = 0xffffff
+
+.field static final TRANSACTION_getSensorProps:I = 0x1
+
+
+# direct methods
+.method public constructor <init>()V
+    .locals 1
+
+    .line 44
+    invoke-direct {p0}, Landroid/os/Binder;-><init>()V
+
+    .line 45
+    invoke-virtual {p0}, Landroid/os/Binder;->markVintfStability()V
+
+    .line 46
+    sget-object v0, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {p0, p0, v0}, Landroid/os/Binder;->attachInterface(Landroid/os/IInterface;Ljava/lang/String;)V
+
+    return-void
+.end method
+
+.method public static asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/face/IFace;
+    .locals 2
+
+    if-nez p0, :cond_0
+
+    const/4 p0, 0x0
+
+    return-object p0
+
+    .line 57
+    :cond_0
+    sget-object v0, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-interface {p0, v0}, Landroid/os/IBinder;->queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_1
+
+    .line 58
+    instance-of v1, v0, Landroid/hardware/biometrics/face/IFace;
+
+    if-eqz v1, :cond_1
+
+    .line 59
+    check-cast v0, Landroid/hardware/biometrics/face/IFace;
+
+    return-object v0
+
+    .line 61
+    :cond_1
+    new-instance v0, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;
+
+    invoke-direct {v0, p0}, Landroid/hardware/biometrics/face/IFace$Stub$Proxy;-><init>(Landroid/os/IBinder;)V
+
+    return-object v0
+.end method
+
+.method public static getDefaultTransactionName(I)Ljava/lang/String;
+    .locals 1
+
+    .line 0
+    const/4 v0, 0x1
+
+    if-eq p0, v0, :cond_1
+
+    const/4 v0, 0x2
+
+    if-eq p0, v0, :cond_0
+
+    packed-switch p0, :pswitch_data_0
+
+    const/4 p0, 0x0
+
+    return-object p0
+
+    :pswitch_0
+    const-string/jumbo p0, "getInterfaceVersion"
+
+    return-object p0
+
+    :pswitch_1
+    const-string/jumbo p0, "getInterfaceHash"
+
+    return-object p0
+
+    :cond_0
+    const-string p0, "createSession"
+
+    return-object p0
+
+    :cond_1
+    const-string/jumbo p0, "getSensorProps"
+
+    return-object p0
+
+    :pswitch_data_0
+    .packed-switch 0xfffffe
+        :pswitch_1
+        :pswitch_0
+    .end packed-switch
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 0
+    return-object p0
+.end method
+
+.method public getMaxTransactionId()I
+    .locals 0
+
+    .line 0
+    const p0, 0xfffffe
+
+    return p0
+.end method
+
+.method public getTransactionName(I)Ljava/lang/String;
+    .locals 0
+
+    .line 97
+    invoke-static {p1}, Landroid/hardware/biometrics/face/IFace$Stub;->getDefaultTransactionName(I)Ljava/lang/String;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 101
+    sget-object v0, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    const/4 v1, 0x1
+
+    if-lt p1, v1, :cond_0
+
+    const v2, 0xffffff
+
+    if-gt p1, v2, :cond_0
+
+    .line 103
+    invoke-virtual {p2, v0}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    :cond_0
+    sparse-switch p1, :sswitch_data_0
+
+    goto :goto_0
+
+    .line 109
+    :sswitch_0
+    invoke-virtual {p3, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    return v1
+
+    .line 114
+    :sswitch_1
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 115
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/IFace;->getInterfaceVersion()I
+
+    move-result p0
+
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeInt(I)V
+
+    return v1
+
+    .line 120
+    :sswitch_2
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 121
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/IFace;->getInterfaceHash()Ljava/lang/String;
+
+    move-result-object p0
+
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    return v1
+
+    :goto_0
+    if-eq p1, v1, :cond_2
+
+    const/4 v0, 0x2
+
+    if-eq p1, v0, :cond_1
+
+    .line 150
+    invoke-super {p0, p1, p2, p3, p4}, Landroid/os/Binder;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    return p0
+
+    .line 137
+    :cond_1
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result p1
+
+    .line 139
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result p4
+
+    .line 141
+    invoke-virtual {p2}, Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/face/ISessionCallback;
+
+    move-result-object v0
+
+    .line 142
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 143
+    invoke-interface {p0, p1, p4, v0}, Landroid/hardware/biometrics/face/IFace;->createSession(IILandroid/hardware/biometrics/face/ISessionCallback;)Landroid/hardware/biometrics/face/ISession;
+
+    move-result-object p0
+
+    .line 144
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 145
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeStrongInterface(Landroid/os/IInterface;)V
+
+    goto :goto_1
+
+    .line 129
+    :cond_2
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/IFace;->getSensorProps()[Landroid/hardware/biometrics/face/SensorProps;
+
+    move-result-object p0
+
+    .line 130
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 131
+    invoke-virtual {p3, p0, v1}, Landroid/os/Parcel;->writeTypedArray([Landroid/os/Parcelable;I)V
+
+    :goto_1
+    return v1
+
+    :sswitch_data_0
+    .sparse-switch
+        0xfffffe -> :sswitch_2
+        0xffffff -> :sswitch_1
+        0x5f4e5446 -> :sswitch_0
+    .end sparse-switch
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/IFace.smali b/smali/classes/android/hardware/biometrics/face/IFace.smali
new file mode 100644
index 00000000..31385a44
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/IFace.smali
@@ -0,0 +1,78 @@
+.class public interface abstract Landroid/hardware/biometrics/face/IFace;
+.super Ljava/lang/Object;
+.source "IFace.java"
+
+# interfaces
+.implements Landroid/os/IInterface;
+
+
+# annotations
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/hardware/biometrics/face/IFace$Stub;,
+        Landroid/hardware/biometrics/face/IFace$Default;
+    }
+.end annotation
+
+
+# static fields
+.field public static final DESCRIPTOR:Ljava/lang/String;
+
+.field public static final HASH:Ljava/lang/String; = "fca1ab84dda6c013b251270d848eb6d964a6d765"
+
+.field public static final VERSION:I = 0x3
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 3
+
+    const/16 v0, 0x24
+
+    const/16 v1, 0x2e
+
+    const-string v2, "android$hardware$biometrics$face$IFace"
+
+    .line 260
+    invoke-virtual {v2, v0, v1}, Ljava/lang/String;->replace(CC)Ljava/lang/String;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/hardware/biometrics/face/IFace;->DESCRIPTOR:Ljava/lang/String;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public abstract createSession(IILandroid/hardware/biometrics/face/ISessionCallback;)Landroid/hardware/biometrics/face/ISession;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getInterfaceHash()Ljava/lang/String;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getInterfaceVersion()I
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getSensorProps()[Landroid/hardware/biometrics/face/SensorProps;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/ISession$Default.smali b/smali/classes/android/hardware/biometrics/face/ISession$Default.smali
new file mode 100644
index 00000000..5afeda93
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/ISession$Default.smali
@@ -0,0 +1,287 @@
+.class public Landroid/hardware/biometrics/face/ISession$Default;
+.super Ljava/lang/Object;
+.source "ISession.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/ISession;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/ISession;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x9
+    name = "Default"
+.end annotation
+
+
+# direct methods
+.method public constructor <init>()V
+    .locals 0
+
+    .line 16
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public authenticate(J)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public authenticateWithContext(JLandroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public close()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public detectInteraction()Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public detectInteractionWithContext(Landroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public enroll(Landroid/hardware/keymaster/HardwareAuthToken;B[BLandroid/hardware/common/NativeHandle;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public enrollWithContext(Landroid/hardware/keymaster/HardwareAuthToken;B[BLandroid/hardware/common/NativeHandle;Landroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public enumerateEnrollments()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public generateChallenge()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public getAuthenticatorId()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public getEnrollmentConfig(B)[Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public getFeatures()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public getInterfaceHash()Ljava/lang/String;
+    .locals 0
+
+    .line 0
+    const-string p0, ""
+
+    return-object p0
+.end method
+
+.method public getInterfaceVersion()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x0
+
+    return p0
+.end method
+
+.method public invalidateAuthenticatorId()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onContextChanged(Landroid/hardware/biometrics/common/OperationContext;)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public removeEnrollments([I)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public resetLockout(Landroid/hardware/keymaster/HardwareAuthToken;)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public revokeChallenge(J)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public setFeature(Landroid/hardware/keymaster/HardwareAuthToken;BZ)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/ISession$Stub$Proxy.smali b/smali/classes/android/hardware/biometrics/face/ISession$Stub$Proxy.smali
new file mode 100644
index 00000000..385739d2
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/ISession$Stub$Proxy.smali
@@ -0,0 +1,1824 @@
+.class Landroid/hardware/biometrics/face/ISession$Stub$Proxy;
+.super Ljava/lang/Object;
+.source "ISession.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/ISession;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/ISession$Stub;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0xa
+    name = "Proxy"
+.end annotation
+
+
+# instance fields
+.field private mCachedHash:Ljava/lang/String;
+
+.field private mCachedVersion:I
+
+.field private mRemote:Landroid/os/IBinder;
+
+
+# direct methods
+.method constructor <init>(Landroid/os/IBinder;)V
+    .locals 1
+
+    .line 423
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/4 v0, -0x1
+
+    .line 426
+    iput v0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mCachedVersion:I
+
+    const-string v0, "-1"
+
+    .line 427
+    iput-object v0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+
+    .line 424
+    iput-object p1, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 430
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    return-object p0
+.end method
+
+.method public authenticate(J)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 518
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 519
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 522
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 523
+    invoke-virtual {v0, p1, p2}, Landroid/os/Parcel;->writeLong(J)V
+
+    .line 524
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x5
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 528
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 529
+    invoke-virtual {v1}, Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
+
+    move-result-object p0
+
+    invoke-static {p0}, Landroid/hardware/biometrics/common/ICancellationSignal$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 532
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 533
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 526
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method authenticate is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 532
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 533
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 534
+    throw p0
+.end method
+
+.method public authenticateWithContext(JLandroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 700
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 701
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 704
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 705
+    invoke-virtual {v0, p1, p2}, Landroid/os/Parcel;->writeLong(J)V
+
+    const/4 p1, 0x0
+
+    .line 706
+    invoke-virtual {v0, p3, p1}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 707
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p2, 0xf
+
+    invoke-interface {p0, p2, v0, v1, p1}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 711
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 712
+    invoke-virtual {v1}, Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
+
+    move-result-object p0
+
+    invoke-static {p0}, Landroid/hardware/biometrics/common/ICancellationSignal$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 715
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 716
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 709
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method authenticateWithContext is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 715
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 716
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 717
+    throw p0
+.end method
+
+.method public close()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 683
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 684
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 686
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 687
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0xe
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 691
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 694
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 695
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 689
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method close is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 694
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 695
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 696
+    throw p0
+.end method
+
+.method public detectInteraction()Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 539
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 540
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 543
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 544
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v2, 0x6
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 548
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 549
+    invoke-virtual {v1}, Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
+
+    move-result-object p0
+
+    invoke-static {p0}, Landroid/hardware/biometrics/common/ICancellationSignal$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 552
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 553
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 546
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method detectInteraction is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 552
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 553
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 554
+    throw p0
+.end method
+
+.method public detectInteractionWithContext(Landroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 747
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 748
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 751
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    const/4 v2, 0x0
+
+    .line 752
+    invoke-virtual {v0, p1, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 753
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0x11
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 757
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 758
+    invoke-virtual {v1}, Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
+
+    move-result-object p0
+
+    invoke-static {p0}, Landroid/hardware/biometrics/common/ICancellationSignal$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 761
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 762
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 755
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method detectInteractionWithContext is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 761
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 762
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 763
+    throw p0
+.end method
+
+.method public enroll(Landroid/hardware/keymaster/HardwareAuthToken;B[BLandroid/hardware/common/NativeHandle;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 494
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 495
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 498
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    const/4 v2, 0x0
+
+    .line 499
+    invoke-virtual {v0, p1, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 500
+    invoke-virtual {v0, p2}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 501
+    invoke-virtual {v0, p3}, Landroid/os/Parcel;->writeByteArray([B)V
+
+    .line 502
+    invoke-virtual {v0, p4, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 503
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x4
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 507
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 508
+    invoke-virtual {v1}, Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
+
+    move-result-object p0
+
+    invoke-static {p0}, Landroid/hardware/biometrics/common/ICancellationSignal$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 511
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 512
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 505
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method enroll is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 511
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 512
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 513
+    throw p0
+.end method
+
+.method public enrollWithContext(Landroid/hardware/keymaster/HardwareAuthToken;B[BLandroid/hardware/common/NativeHandle;Landroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 722
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 723
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 726
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    const/4 v2, 0x0
+
+    .line 727
+    invoke-virtual {v0, p1, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 728
+    invoke-virtual {v0, p2}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 729
+    invoke-virtual {v0, p3}, Landroid/os/Parcel;->writeByteArray([B)V
+
+    .line 730
+    invoke-virtual {v0, p4, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 731
+    invoke-virtual {v0, p5, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 732
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0x10
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 736
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 737
+    invoke-virtual {v1}, Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
+
+    move-result-object p0
+
+    invoke-static {p0}, Landroid/hardware/biometrics/common/ICancellationSignal$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 740
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 741
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 734
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method enrollWithContext is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 740
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 741
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 742
+    throw p0
+.end method
+
+.method public enumerateEnrollments()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 559
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 560
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 562
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 563
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v2, 0x7
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 567
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 570
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 571
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 565
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method enumerateEnrollments is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 570
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 571
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 572
+    throw p0
+.end method
+
+.method public generateChallenge()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 438
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 439
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 441
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 442
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 v2, 0x1
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 446
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 449
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 450
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 444
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method generateChallenge is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 449
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 450
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 451
+    throw p0
+.end method
+
+.method public getAuthenticatorId()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 631
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 632
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 634
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 635
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0xb
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 639
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 642
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 643
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 637
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method getAuthenticatorId is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 642
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 643
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 644
+    throw p0
+.end method
+
+.method public getEnrollmentConfig(B)[Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 473
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 474
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 477
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 478
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 479
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x3
+
+    const/4 v2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 483
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 484
+    sget-object p0, Landroid/hardware/biometrics/face/EnrollmentStageConfig;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {v1, p0}, Landroid/os/Parcel;->createTypedArray(Landroid/os/Parcelable$Creator;)[Ljava/lang/Object;
+
+    move-result-object p0
+
+    check-cast p0, [Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 487
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 488
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-object p0
+
+    .line 481
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method getEnrollmentConfig is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 487
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 488
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 489
+    throw p0
+.end method
+
+.method public getFeatures()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 594
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 595
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 597
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 598
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0x9
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 602
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 605
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 606
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 600
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method getFeatures is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 605
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 606
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 607
+    throw p0
+.end method
+
+.method public getInterfaceDescriptor()Ljava/lang/String;
+    .locals 0
+
+    .line 434
+    sget-object p0, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    return-object p0
+.end method
+
+.method public declared-synchronized getInterfaceHash()Ljava/lang/String;
+    .locals 5
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    monitor-enter p0
+
+    :try_start_0
+    const-string v0, "-1"
+
+    .line 803
+    iget-object v1, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_0
+
+    .line 804
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 805
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_1
+
+    .line 807
+    :try_start_1
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 808
+    iget-object v2, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const v3, 0xfffffe
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    .line 809
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 810
+    invoke-virtual {v1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v2
+
+    iput-object v2, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    .line 812
+    :try_start_2
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 813
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    goto :goto_0
+
+    :catchall_0
+    move-exception v2
+
+    .line 812
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 813
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 814
+    throw v2
+
+    .line 816
+    :cond_0
+    :goto_0
+    iget-object v0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_1
+
+    monitor-exit p0
+
+    return-object v0
+
+    :catchall_1
+    move-exception v0
+
+    monitor-exit p0
+
+    throw v0
+.end method
+
+.method public getInterfaceVersion()I
+    .locals 5
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 786
+    iget v0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mCachedVersion:I
+
+    const/4 v1, -0x1
+
+    if-ne v0, v1, :cond_0
+
+    .line 787
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 788
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 790
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 791
+    iget-object v2, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const v3, 0xffffff
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    .line 792
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 793
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mCachedVersion:I
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 795
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 796
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    goto :goto_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 795
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 796
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 797
+    throw p0
+
+    .line 799
+    :cond_0
+    :goto_0
+    iget p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mCachedVersion:I
+
+    return p0
+.end method
+
+.method public invalidateAuthenticatorId()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 648
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 649
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 651
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 652
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0xc
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 656
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 659
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 660
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 654
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method invalidateAuthenticatorId is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 659
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 660
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 661
+    throw p0
+.end method
+
+.method public onContextChanged(Landroid/hardware/biometrics/common/OperationContext;)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 768
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 769
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 771
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    const/4 v2, 0x0
+
+    .line 772
+    invoke-virtual {v0, p1, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 773
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0x12
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 777
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 780
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 781
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 775
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onContextChanged is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 780
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 781
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 782
+    throw p0
+.end method
+
+.method public removeEnrollments([I)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 576
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 577
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 579
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 580
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeIntArray([I)V
+
+    .line 581
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0x8
+
+    const/4 v2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 585
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 588
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 589
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 583
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method removeEnrollments is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 588
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 589
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 590
+    throw p0
+.end method
+
+.method public resetLockout(Landroid/hardware/keymaster/HardwareAuthToken;)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 665
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 666
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 668
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    const/4 v2, 0x0
+
+    .line 669
+    invoke-virtual {v0, p1, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 670
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0xd
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 674
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 677
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 678
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 672
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method resetLockout is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 677
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 678
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 679
+    throw p0
+.end method
+
+.method public revokeChallenge(J)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 455
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 456
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 458
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 459
+    invoke-virtual {v0, p1, p2}, Landroid/os/Parcel;->writeLong(J)V
+
+    .line 460
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x2
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 464
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 467
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 468
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 462
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method revokeChallenge is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 467
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 468
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 469
+    throw p0
+.end method
+
+.method public setFeature(Landroid/hardware/keymaster/HardwareAuthToken;BZ)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 611
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 612
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 614
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    const/4 v2, 0x0
+
+    .line 615
+    invoke-virtual {v0, p1, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 616
+    invoke-virtual {v0, p2}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 617
+    invoke-virtual {v0, p3}, Landroid/os/Parcel;->writeBoolean(Z)V
+
+    .line 618
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0xa
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 622
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 625
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 626
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 620
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method setFeature is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 625
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 626
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 627
+    throw p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/ISession$Stub.smali b/smali/classes/android/hardware/biometrics/face/ISession$Stub.smali
new file mode 100644
index 00000000..d99bb1ef
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/ISession$Stub.smali
@@ -0,0 +1,774 @@
+.class public abstract Landroid/hardware/biometrics/face/ISession$Stub;
+.super Landroid/os/Binder;
+.source "ISession.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/ISession;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/ISession;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x409
+    name = "Stub"
+.end annotation
+
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/hardware/biometrics/face/ISession$Stub$Proxy;
+    }
+.end annotation
+
+
+# static fields
+.field static final TRANSACTION_authenticate:I = 0x5
+
+.field static final TRANSACTION_authenticateWithContext:I = 0xf
+
+.field static final TRANSACTION_close:I = 0xe
+
+.field static final TRANSACTION_detectInteraction:I = 0x6
+
+.field static final TRANSACTION_detectInteractionWithContext:I = 0x11
+
+.field static final TRANSACTION_enroll:I = 0x4
+
+.field static final TRANSACTION_enrollWithContext:I = 0x10
+
+.field static final TRANSACTION_enumerateEnrollments:I = 0x7
+
+.field static final TRANSACTION_generateChallenge:I = 0x1
+
+.field static final TRANSACTION_getAuthenticatorId:I = 0xb
+
+.field static final TRANSACTION_getEnrollmentConfig:I = 0x3
+
+.field static final TRANSACTION_getFeatures:I = 0x9
+
+.field static final TRANSACTION_getInterfaceHash:I = 0xfffffe
+
+.field static final TRANSACTION_getInterfaceVersion:I = 0xffffff
+
+.field static final TRANSACTION_invalidateAuthenticatorId:I = 0xc
+
+.field static final TRANSACTION_onContextChanged:I = 0x12
+
+.field static final TRANSACTION_removeEnrollments:I = 0x8
+
+.field static final TRANSACTION_resetLockout:I = 0xd
+
+.field static final TRANSACTION_revokeChallenge:I = 0x2
+
+.field static final TRANSACTION_setFeature:I = 0xa
+
+
+# direct methods
+.method public constructor <init>()V
+    .locals 1
+
+    .line 97
+    invoke-direct {p0}, Landroid/os/Binder;-><init>()V
+
+    .line 98
+    invoke-virtual {p0}, Landroid/os/Binder;->markVintfStability()V
+
+    .line 99
+    sget-object v0, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {p0, p0, v0}, Landroid/os/Binder;->attachInterface(Landroid/os/IInterface;Ljava/lang/String;)V
+
+    return-void
+.end method
+
+.method public static asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/face/ISession;
+    .locals 2
+
+    if-nez p0, :cond_0
+
+    const/4 p0, 0x0
+
+    return-object p0
+
+    .line 110
+    :cond_0
+    sget-object v0, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-interface {p0, v0}, Landroid/os/IBinder;->queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_1
+
+    .line 111
+    instance-of v1, v0, Landroid/hardware/biometrics/face/ISession;
+
+    if-eqz v1, :cond_1
+
+    .line 112
+    check-cast v0, Landroid/hardware/biometrics/face/ISession;
+
+    return-object v0
+
+    .line 114
+    :cond_1
+    new-instance v0, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;
+
+    invoke-direct {v0, p0}, Landroid/hardware/biometrics/face/ISession$Stub$Proxy;-><init>(Landroid/os/IBinder;)V
+
+    return-object v0
+.end method
+
+.method public static getDefaultTransactionName(I)Ljava/lang/String;
+    .locals 0
+
+    .line 0
+    packed-switch p0, :pswitch_data_0
+
+    packed-switch p0, :pswitch_data_1
+
+    const/4 p0, 0x0
+
+    return-object p0
+
+    :pswitch_0
+    const-string/jumbo p0, "getInterfaceVersion"
+
+    return-object p0
+
+    :pswitch_1
+    const-string/jumbo p0, "getInterfaceHash"
+
+    return-object p0
+
+    :pswitch_2
+    const-string/jumbo p0, "onContextChanged"
+
+    return-object p0
+
+    :pswitch_3
+    const-string p0, "detectInteractionWithContext"
+
+    return-object p0
+
+    :pswitch_4
+    const-string p0, "enrollWithContext"
+
+    return-object p0
+
+    :pswitch_5
+    const-string p0, "authenticateWithContext"
+
+    return-object p0
+
+    :pswitch_6
+    const-string p0, "close"
+
+    return-object p0
+
+    :pswitch_7
+    const-string/jumbo p0, "resetLockout"
+
+    return-object p0
+
+    :pswitch_8
+    const-string/jumbo p0, "invalidateAuthenticatorId"
+
+    return-object p0
+
+    :pswitch_9
+    const-string/jumbo p0, "getAuthenticatorId"
+
+    return-object p0
+
+    :pswitch_a
+    const-string/jumbo p0, "setFeature"
+
+    return-object p0
+
+    :pswitch_b
+    const-string/jumbo p0, "getFeatures"
+
+    return-object p0
+
+    :pswitch_c
+    const-string/jumbo p0, "removeEnrollments"
+
+    return-object p0
+
+    :pswitch_d
+    const-string p0, "enumerateEnrollments"
+
+    return-object p0
+
+    :pswitch_e
+    const-string p0, "detectInteraction"
+
+    return-object p0
+
+    :pswitch_f
+    const-string p0, "authenticate"
+
+    return-object p0
+
+    :pswitch_10
+    const-string p0, "enroll"
+
+    return-object p0
+
+    :pswitch_11
+    const-string/jumbo p0, "getEnrollmentConfig"
+
+    return-object p0
+
+    :pswitch_12
+    const-string/jumbo p0, "revokeChallenge"
+
+    return-object p0
+
+    :pswitch_13
+    const-string/jumbo p0, "generateChallenge"
+
+    return-object p0
+
+    :pswitch_data_0
+    .packed-switch 0x1
+        :pswitch_13
+        :pswitch_12
+        :pswitch_11
+        :pswitch_10
+        :pswitch_f
+        :pswitch_e
+        :pswitch_d
+        :pswitch_c
+        :pswitch_b
+        :pswitch_a
+        :pswitch_9
+        :pswitch_8
+        :pswitch_7
+        :pswitch_6
+        :pswitch_5
+        :pswitch_4
+        :pswitch_3
+        :pswitch_2
+    .end packed-switch
+
+    :pswitch_data_1
+    .packed-switch 0xfffffe
+        :pswitch_1
+        :pswitch_0
+    .end packed-switch
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 0
+    return-object p0
+.end method
+
+.method public getMaxTransactionId()I
+    .locals 0
+
+    .line 0
+    const p0, 0xfffffe
+
+    return p0
+.end method
+
+.method public getTransactionName(I)Ljava/lang/String;
+    .locals 0
+
+    .line 214
+    invoke-static {p1}, Landroid/hardware/biometrics/face/ISession$Stub;->getDefaultTransactionName(I)Ljava/lang/String;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+    .locals 8
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 218
+    sget-object v0, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    const/4 v1, 0x1
+
+    if-lt p1, v1, :cond_0
+
+    const v2, 0xffffff
+
+    if-gt p1, v2, :cond_0
+
+    .line 220
+    invoke-virtual {p2, v0}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    :cond_0
+    sparse-switch p1, :sswitch_data_0
+
+    packed-switch p1, :pswitch_data_0
+
+    .line 414
+    invoke-super {p0, p1, p2, p3, p4}, Landroid/os/Binder;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    return p0
+
+    .line 226
+    :sswitch_0
+    invoke-virtual {p3, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    return v1
+
+    .line 231
+    :sswitch_1
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 232
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->getInterfaceVersion()I
+
+    move-result p0
+
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeInt(I)V
+
+    return v1
+
+    .line 237
+    :sswitch_2
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 238
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->getInterfaceHash()Ljava/lang/String;
+
+    move-result-object p0
+
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    return v1
+
+    .line 406
+    :pswitch_0
+    sget-object p1, Landroid/hardware/biometrics/common/OperationContext;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    check-cast p1, Landroid/hardware/biometrics/common/OperationContext;
+
+    .line 407
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 408
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISession;->onContextChanged(Landroid/hardware/biometrics/common/OperationContext;)V
+
+    .line 409
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 396
+    :pswitch_1
+    sget-object p1, Landroid/hardware/biometrics/common/OperationContext;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    check-cast p1, Landroid/hardware/biometrics/common/OperationContext;
+
+    .line 397
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 398
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISession;->detectInteractionWithContext(Landroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+
+    .line 399
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 400
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeStrongInterface(Landroid/os/IInterface;)V
+
+    goto/16 :goto_0
+
+    .line 378
+    :pswitch_2
+    sget-object p1, Landroid/hardware/keymaster/HardwareAuthToken;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    move-object v3, p1
+
+    check-cast v3, Landroid/hardware/keymaster/HardwareAuthToken;
+
+    .line 380
+    invoke-virtual {p2}, Landroid/os/Parcel;->readByte()B
+
+    move-result v4
+
+    .line 382
+    invoke-virtual {p2}, Landroid/os/Parcel;->createByteArray()[B
+
+    move-result-object v5
+
+    .line 384
+    sget-object p1, Landroid/hardware/common/NativeHandle;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    move-object v6, p1
+
+    check-cast v6, Landroid/hardware/common/NativeHandle;
+
+    .line 386
+    sget-object p1, Landroid/hardware/biometrics/common/OperationContext;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    move-object v7, p1
+
+    check-cast v7, Landroid/hardware/biometrics/common/OperationContext;
+
+    .line 387
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    move-object v2, p0
+
+    .line 388
+    invoke-interface/range {v2 .. v7}, Landroid/hardware/biometrics/face/ISession;->enrollWithContext(Landroid/hardware/keymaster/HardwareAuthToken;B[BLandroid/hardware/common/NativeHandle;Landroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+
+    .line 389
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 390
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeStrongInterface(Landroid/os/IInterface;)V
+
+    goto/16 :goto_0
+
+    .line 366
+    :pswitch_3
+    invoke-virtual {p2}, Landroid/os/Parcel;->readLong()J
+
+    move-result-wide v2
+
+    .line 368
+    sget-object p1, Landroid/hardware/biometrics/common/OperationContext;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    check-cast p1, Landroid/hardware/biometrics/common/OperationContext;
+
+    .line 369
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 370
+    invoke-interface {p0, v2, v3, p1}, Landroid/hardware/biometrics/face/ISession;->authenticateWithContext(JLandroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+
+    .line 371
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 372
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeStrongInterface(Landroid/os/IInterface;)V
+
+    goto/16 :goto_0
+
+    .line 359
+    :pswitch_4
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->close()V
+
+    .line 360
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 351
+    :pswitch_5
+    sget-object p1, Landroid/hardware/keymaster/HardwareAuthToken;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    check-cast p1, Landroid/hardware/keymaster/HardwareAuthToken;
+
+    .line 352
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 353
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISession;->resetLockout(Landroid/hardware/keymaster/HardwareAuthToken;)V
+
+    .line 354
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 344
+    :pswitch_6
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->invalidateAuthenticatorId()V
+
+    .line 345
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 338
+    :pswitch_7
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->getAuthenticatorId()V
+
+    .line 339
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 326
+    :pswitch_8
+    sget-object p1, Landroid/hardware/keymaster/HardwareAuthToken;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    check-cast p1, Landroid/hardware/keymaster/HardwareAuthToken;
+
+    .line 328
+    invoke-virtual {p2}, Landroid/os/Parcel;->readByte()B
+
+    move-result p4
+
+    .line 330
+    invoke-virtual {p2}, Landroid/os/Parcel;->readBoolean()Z
+
+    move-result v0
+
+    .line 331
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 332
+    invoke-interface {p0, p1, p4, v0}, Landroid/hardware/biometrics/face/ISession;->setFeature(Landroid/hardware/keymaster/HardwareAuthToken;BZ)V
+
+    .line 333
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 319
+    :pswitch_9
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->getFeatures()V
+
+    .line 320
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 311
+    :pswitch_a
+    invoke-virtual {p2}, Landroid/os/Parcel;->createIntArray()[I
+
+    move-result-object p1
+
+    .line 312
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 313
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISession;->removeEnrollments([I)V
+
+    .line 314
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 304
+    :pswitch_b
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->enumerateEnrollments()V
+
+    .line 305
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 297
+    :pswitch_c
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->detectInteraction()Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+
+    .line 298
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 299
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeStrongInterface(Landroid/os/IInterface;)V
+
+    goto :goto_0
+
+    .line 288
+    :pswitch_d
+    invoke-virtual {p2}, Landroid/os/Parcel;->readLong()J
+
+    move-result-wide v2
+
+    .line 289
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 290
+    invoke-interface {p0, v2, v3}, Landroid/hardware/biometrics/face/ISession;->authenticate(J)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+
+    .line 291
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 292
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeStrongInterface(Landroid/os/IInterface;)V
+
+    goto :goto_0
+
+    .line 272
+    :pswitch_e
+    sget-object p1, Landroid/hardware/keymaster/HardwareAuthToken;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    check-cast p1, Landroid/hardware/keymaster/HardwareAuthToken;
+
+    .line 274
+    invoke-virtual {p2}, Landroid/os/Parcel;->readByte()B
+
+    move-result p4
+
+    .line 276
+    invoke-virtual {p2}, Landroid/os/Parcel;->createByteArray()[B
+
+    move-result-object v0
+
+    .line 278
+    sget-object v2, Landroid/hardware/common/NativeHandle;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, v2}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/hardware/common/NativeHandle;
+
+    .line 279
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 280
+    invoke-interface {p0, p1, p4, v0, v2}, Landroid/hardware/biometrics/face/ISession;->enroll(Landroid/hardware/keymaster/HardwareAuthToken;B[BLandroid/hardware/common/NativeHandle;)Landroid/hardware/biometrics/common/ICancellationSignal;
+
+    move-result-object p0
+
+    .line 281
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 282
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeStrongInterface(Landroid/os/IInterface;)V
+
+    goto :goto_0
+
+    .line 262
+    :pswitch_f
+    invoke-virtual {p2}, Landroid/os/Parcel;->readByte()B
+
+    move-result p1
+
+    .line 263
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 264
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISession;->getEnrollmentConfig(B)[Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+
+    move-result-object p0
+
+    .line 265
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 266
+    invoke-virtual {p3, p0, v1}, Landroid/os/Parcel;->writeTypedArray([Landroid/os/Parcelable;I)V
+
+    goto :goto_0
+
+    .line 253
+    :pswitch_10
+    invoke-virtual {p2}, Landroid/os/Parcel;->readLong()J
+
+    move-result-wide v2
+
+    .line 254
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 255
+    invoke-interface {p0, v2, v3}, Landroid/hardware/biometrics/face/ISession;->revokeChallenge(J)V
+
+    .line 256
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 246
+    :pswitch_11
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISession;->generateChallenge()V
+
+    .line 247
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    :goto_0
+    return v1
+
+    nop
+
+    :sswitch_data_0
+    .sparse-switch
+        0xfffffe -> :sswitch_2
+        0xffffff -> :sswitch_1
+        0x5f4e5446 -> :sswitch_0
+    .end sparse-switch
+
+    :pswitch_data_0
+    .packed-switch 0x1
+        :pswitch_11
+        :pswitch_10
+        :pswitch_f
+        :pswitch_e
+        :pswitch_d
+        :pswitch_c
+        :pswitch_b
+        :pswitch_a
+        :pswitch_9
+        :pswitch_8
+        :pswitch_7
+        :pswitch_6
+        :pswitch_5
+        :pswitch_4
+        :pswitch_3
+        :pswitch_2
+        :pswitch_1
+        :pswitch_0
+    .end packed-switch
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/ISession.smali b/smali/classes/android/hardware/biometrics/face/ISession.smali
new file mode 100644
index 00000000..86190bbc
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/ISession.smali
@@ -0,0 +1,206 @@
+.class public interface abstract Landroid/hardware/biometrics/face/ISession;
+.super Ljava/lang/Object;
+.source "ISession.java"
+
+# interfaces
+.implements Landroid/os/IInterface;
+
+
+# annotations
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/hardware/biometrics/face/ISession$Stub;,
+        Landroid/hardware/biometrics/face/ISession$Default;
+    }
+.end annotation
+
+
+# static fields
+.field public static final DESCRIPTOR:Ljava/lang/String;
+
+.field public static final HASH:Ljava/lang/String; = "fca1ab84dda6c013b251270d848eb6d964a6d765"
+
+.field public static final VERSION:I = 0x3
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 3
+
+    const/16 v0, 0x24
+
+    const/16 v1, 0x2e
+
+    const-string v2, "android$hardware$biometrics$face$ISession"
+
+    .line 845
+    invoke-virtual {v2, v0, v1}, Ljava/lang/String;->replace(CC)Ljava/lang/String;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/hardware/biometrics/face/ISession;->DESCRIPTOR:Ljava/lang/String;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public abstract authenticate(J)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract authenticateWithContext(JLandroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract close()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract detectInteraction()Landroid/hardware/biometrics/common/ICancellationSignal;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract detectInteractionWithContext(Landroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract enroll(Landroid/hardware/keymaster/HardwareAuthToken;B[BLandroid/hardware/common/NativeHandle;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract enrollWithContext(Landroid/hardware/keymaster/HardwareAuthToken;B[BLandroid/hardware/common/NativeHandle;Landroid/hardware/biometrics/common/OperationContext;)Landroid/hardware/biometrics/common/ICancellationSignal;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract enumerateEnrollments()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract generateChallenge()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getAuthenticatorId()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getEnrollmentConfig(B)[Landroid/hardware/biometrics/face/EnrollmentStageConfig;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getFeatures()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getInterfaceHash()Ljava/lang/String;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getInterfaceVersion()I
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract invalidateAuthenticatorId()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onContextChanged(Landroid/hardware/biometrics/common/OperationContext;)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract removeEnrollments([I)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract resetLockout(Landroid/hardware/keymaster/HardwareAuthToken;)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract revokeChallenge(J)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract setFeature(Landroid/hardware/keymaster/HardwareAuthToken;BZ)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/ISessionCallback$Default.smali b/smali/classes/android/hardware/biometrics/face/ISessionCallback$Default.smali
new file mode 100644
index 00000000..b827b16e
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/ISessionCallback$Default.smali
@@ -0,0 +1,285 @@
+.class public Landroid/hardware/biometrics/face/ISessionCallback$Default;
+.super Ljava/lang/Object;
+.source "ISessionCallback.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/ISessionCallback;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/ISessionCallback;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x9
+    name = "Default"
+.end annotation
+
+
+# direct methods
+.method public constructor <init>()V
+    .locals 0
+
+    .line 16
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x0
+
+    return-object p0
+.end method
+
+.method public getInterfaceHash()Ljava/lang/String;
+    .locals 0
+
+    .line 0
+    const-string p0, ""
+
+    return-object p0
+.end method
+
+.method public getInterfaceVersion()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x0
+
+    return p0
+.end method
+
+.method public onAuthenticationFailed()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onAuthenticationFrame(Landroid/hardware/biometrics/face/AuthenticationFrame;)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onAuthenticationSucceeded(ILandroid/hardware/keymaster/HardwareAuthToken;)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onAuthenticatorIdInvalidated(J)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onAuthenticatorIdRetrieved(J)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onChallengeGenerated(J)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onChallengeRevoked(J)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onEnrollmentFrame(Landroid/hardware/biometrics/face/EnrollmentFrame;)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onEnrollmentProgress(II)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onEnrollmentsEnumerated([I)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onEnrollmentsRemoved([I)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onError(BI)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onFeatureSet(B)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onFeaturesRetrieved([B)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onInteractionDetected()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onLockoutCleared()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onLockoutPermanent()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onLockoutTimed(J)V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
+
+.method public onSessionClosed()V
+    .locals 0
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 0
+    return-void
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/ISessionCallback$Stub$Proxy.smali b/smali/classes/android/hardware/biometrics/face/ISessionCallback$Stub$Proxy.smali
new file mode 100644
index 00000000..e2d5e39a
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/ISessionCallback$Stub$Proxy.smali
@@ -0,0 +1,1829 @@
+.class Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;
+.super Ljava/lang/Object;
+.source "ISessionCallback.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/ISessionCallback;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/ISessionCallback$Stub;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0xa
+    name = "Proxy"
+.end annotation
+
+
+# instance fields
+.field private mCachedHash:Ljava/lang/String;
+
+.field private mCachedVersion:I
+
+.field private mRemote:Landroid/os/IBinder;
+
+
+# direct methods
+.method constructor <init>(Landroid/os/IBinder;)V
+    .locals 1
+
+    .line 417
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/4 v0, -0x1
+
+    .line 420
+    iput v0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mCachedVersion:I
+
+    const-string v0, "-1"
+
+    .line 421
+    iput-object v0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+
+    .line 418
+    iput-object p1, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 424
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    return-object p0
+.end method
+
+.method public getInterfaceDescriptor()Ljava/lang/String;
+    .locals 0
+
+    .line 428
+    sget-object p0, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    return-object p0
+.end method
+
+.method public declared-synchronized getInterfaceHash()Ljava/lang/String;
+    .locals 5
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    monitor-enter p0
+
+    :try_start_0
+    const-string v0, "-1"
+
+    .line 789
+    iget-object v1, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_0
+
+    .line 790
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 791
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_1
+
+    .line 793
+    :try_start_1
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 794
+    iget-object v2, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const v3, 0xfffffe
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    .line 795
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 796
+    invoke-virtual {v1}, Landroid/os/Parcel;->readString()Ljava/lang/String;
+
+    move-result-object v2
+
+    iput-object v2, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    .line 798
+    :try_start_2
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 799
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    goto :goto_0
+
+    :catchall_0
+    move-exception v2
+
+    .line 798
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 799
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 800
+    throw v2
+
+    .line 802
+    :cond_0
+    :goto_0
+    iget-object v0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mCachedHash:Ljava/lang/String;
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_1
+
+    monitor-exit p0
+
+    return-object v0
+
+    :catchall_1
+    move-exception v0
+
+    monitor-exit p0
+
+    throw v0
+.end method
+
+.method public getInterfaceVersion()I
+    .locals 5
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 772
+    iget v0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mCachedVersion:I
+
+    const/4 v1, -0x1
+
+    if-ne v0, v1, :cond_0
+
+    .line 773
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 774
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 776
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 777
+    iget-object v2, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const v3, 0xffffff
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v0, v1, v4}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    .line 778
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+
+    .line 779
+    invoke-virtual {v1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mCachedVersion:I
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 781
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 782
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    goto :goto_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 781
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 782
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 783
+    throw p0
+
+    .line 785
+    :cond_0
+    :goto_0
+    iget p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mCachedVersion:I
+
+    return p0
+.end method
+
+.method public onAuthenticationFailed()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 561
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 562
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 564
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 565
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0x8
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 569
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 572
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 573
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 567
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method onAuthenticationFailed is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 572
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 573
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 574
+    throw p0
+.end method
+
+.method public onAuthenticationFrame(Landroid/hardware/biometrics/face/AuthenticationFrame;)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 468
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 469
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 471
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    const/4 v2, 0x0
+
+    .line 472
+    invoke-virtual {v0, p1, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 473
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x3
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 477
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 480
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 481
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 475
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onAuthenticationFrame is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 480
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 481
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 482
+    throw p0
+.end method
+
+.method public onAuthenticationSucceeded(ILandroid/hardware/keymaster/HardwareAuthToken;)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 542
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 543
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 545
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 546
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeInt(I)V
+
+    const/4 p1, 0x0
+
+    .line 547
+    invoke-virtual {v0, p2, p1}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 548
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p2, 0x7
+
+    invoke-interface {p0, p2, v0, v1, p1}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 552
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 555
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 556
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 550
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onAuthenticationSucceeded is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 555
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 556
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 557
+    throw p0
+.end method
+
+.method public onAuthenticatorIdInvalidated(J)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 737
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 738
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 740
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 741
+    invoke-virtual {v0, p1, p2}, Landroid/os/Parcel;->writeLong(J)V
+
+    .line 742
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0x12
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 746
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 749
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 750
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 744
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onAuthenticatorIdInvalidated is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 749
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 750
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 751
+    throw p0
+.end method
+
+.method public onAuthenticatorIdRetrieved(J)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 719
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 720
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 722
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 723
+    invoke-virtual {v0, p1, p2}, Landroid/os/Parcel;->writeLong(J)V
+
+    .line 724
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0x11
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 728
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 731
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 732
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 726
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onAuthenticatorIdRetrieved is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 731
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 732
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 733
+    throw p0
+.end method
+
+.method public onChallengeGenerated(J)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 432
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 433
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 435
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 436
+    invoke-virtual {v0, p1, p2}, Landroid/os/Parcel;->writeLong(J)V
+
+    .line 437
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x1
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 441
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 444
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 445
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 439
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onChallengeGenerated is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 444
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 445
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 446
+    throw p0
+.end method
+
+.method public onChallengeRevoked(J)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 450
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 451
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 453
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 454
+    invoke-virtual {v0, p1, p2}, Landroid/os/Parcel;->writeLong(J)V
+
+    .line 455
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x2
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 459
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 462
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 463
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 457
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onChallengeRevoked is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 462
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 463
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 464
+    throw p0
+.end method
+
+.method public onEnrollmentFrame(Landroid/hardware/biometrics/face/EnrollmentFrame;)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 486
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 487
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 489
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    const/4 v2, 0x0
+
+    .line 490
+    invoke-virtual {v0, p1, v2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 491
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x4
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 495
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 498
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 499
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 493
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onEnrollmentFrame is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 498
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 499
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 500
+    throw p0
+.end method
+
+.method public onEnrollmentProgress(II)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 523
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 524
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 526
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 527
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 528
+    invoke-virtual {v0, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 529
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x6
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 533
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 536
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 537
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 531
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onEnrollmentProgress is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 536
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 537
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 538
+    throw p0
+.end method
+
+.method public onEnrollmentsEnumerated([I)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 647
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 648
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 650
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 651
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeIntArray([I)V
+
+    .line 652
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0xd
+
+    const/4 v2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 656
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 659
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 660
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 654
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onEnrollmentsEnumerated is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 659
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 660
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 661
+    throw p0
+.end method
+
+.method public onEnrollmentsRemoved([I)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 701
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 702
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 704
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 705
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeIntArray([I)V
+
+    .line 706
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0x10
+
+    const/4 v2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 710
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 713
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 714
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 708
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onEnrollmentsRemoved is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 713
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 714
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 715
+    throw p0
+.end method
+
+.method public onError(BI)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 504
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 505
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 507
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 508
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 509
+    invoke-virtual {v0, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 510
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/4 p1, 0x5
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 514
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 517
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 518
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 512
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onError is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 517
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 518
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 519
+    throw p0
+.end method
+
+.method public onFeatureSet(B)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 683
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 684
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 686
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 687
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 688
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0xf
+
+    const/4 v2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 692
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 695
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 696
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 690
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onFeatureSet is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 695
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 696
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 697
+    throw p0
+.end method
+
+.method public onFeaturesRetrieved([B)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 665
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 666
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 668
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 669
+    invoke-virtual {v0, p1}, Landroid/os/Parcel;->writeByteArray([B)V
+
+    .line 670
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0xe
+
+    const/4 v2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, v2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 674
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 677
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 678
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 672
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onFeaturesRetrieved is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 677
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 678
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 679
+    throw p0
+.end method
+
+.method public onInteractionDetected()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 630
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 631
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 633
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 634
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0xc
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 638
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 641
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 642
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 636
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method onInteractionDetected is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 641
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 642
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 643
+    throw p0
+.end method
+
+.method public onLockoutCleared()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 613
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 614
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 616
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 617
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0xb
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 621
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 624
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 625
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 619
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method onLockoutCleared is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 624
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 625
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 626
+    throw p0
+.end method
+
+.method public onLockoutPermanent()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 596
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 597
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 599
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 600
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0xa
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 604
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 607
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 608
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 602
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method onLockoutPermanent is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 607
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 608
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 609
+    throw p0
+.end method
+
+.method public onLockoutTimed(J)V
+    .locals 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 578
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 579
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 581
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 582
+    invoke-virtual {v0, p1, p2}, Landroid/os/Parcel;->writeLong(J)V
+
+    .line 583
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 p1, 0x9
+
+    const/4 p2, 0x0
+
+    invoke-interface {p0, p1, v0, v1, p2}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 587
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 590
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 591
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 585
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string p1, "Method onLockoutTimed is unimplemented."
+
+    invoke-direct {p0, p1}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 590
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 591
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 592
+    throw p0
+.end method
+
+.method public onSessionClosed()V
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 755
+    invoke-virtual {p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    invoke-static {v0}, Landroid/os/Parcel;->obtain(Landroid/os/IBinder;)Landroid/os/Parcel;
+
+    move-result-object v0
+
+    .line 756
+    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
+
+    move-result-object v1
+
+    .line 758
+    :try_start_0
+    sget-object v2, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
+
+    .line 759
+    iget-object p0, p0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;->mRemote:Landroid/os/IBinder;
+
+    const/16 v2, 0x13
+
+    const/4 v3, 0x0
+
+    invoke-interface {p0, v2, v0, v1, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    if-eqz p0, :cond_0
+
+    .line 763
+    invoke-virtual {v1}, Landroid/os/Parcel;->readException()V
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    .line 766
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 767
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    return-void
+
+    .line 761
+    :cond_0
+    :try_start_1
+    new-instance p0, Landroid/os/RemoteException;
+
+    const-string v2, "Method onSessionClosed is unimplemented."
+
+    invoke-direct {p0, v2}, Landroid/os/RemoteException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    :catchall_0
+    move-exception p0
+
+    .line 766
+    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
+
+    .line 767
+    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
+
+    .line 768
+    throw p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/ISessionCallback$Stub.smali b/smali/classes/android/hardware/biometrics/face/ISessionCallback$Stub.smali
new file mode 100644
index 00000000..1c96ac6d
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/ISessionCallback$Stub.smali
@@ -0,0 +1,710 @@
+.class public abstract Landroid/hardware/biometrics/face/ISessionCallback$Stub;
+.super Landroid/os/Binder;
+.source "ISessionCallback.java"
+
+# interfaces
+.implements Landroid/hardware/biometrics/face/ISessionCallback;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/ISessionCallback;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x409
+    name = "Stub"
+.end annotation
+
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;
+    }
+.end annotation
+
+
+# static fields
+.field static final TRANSACTION_getInterfaceHash:I = 0xfffffe
+
+.field static final TRANSACTION_getInterfaceVersion:I = 0xffffff
+
+.field static final TRANSACTION_onAuthenticationFailed:I = 0x8
+
+.field static final TRANSACTION_onAuthenticationFrame:I = 0x3
+
+.field static final TRANSACTION_onAuthenticationSucceeded:I = 0x7
+
+.field static final TRANSACTION_onAuthenticatorIdInvalidated:I = 0x12
+
+.field static final TRANSACTION_onAuthenticatorIdRetrieved:I = 0x11
+
+.field static final TRANSACTION_onChallengeGenerated:I = 0x1
+
+.field static final TRANSACTION_onChallengeRevoked:I = 0x2
+
+.field static final TRANSACTION_onEnrollmentFrame:I = 0x4
+
+.field static final TRANSACTION_onEnrollmentProgress:I = 0x6
+
+.field static final TRANSACTION_onEnrollmentsEnumerated:I = 0xd
+
+.field static final TRANSACTION_onEnrollmentsRemoved:I = 0x10
+
+.field static final TRANSACTION_onError:I = 0x5
+
+.field static final TRANSACTION_onFeatureSet:I = 0xf
+
+.field static final TRANSACTION_onFeaturesRetrieved:I = 0xe
+
+.field static final TRANSACTION_onInteractionDetected:I = 0xc
+
+.field static final TRANSACTION_onLockoutCleared:I = 0xb
+
+.field static final TRANSACTION_onLockoutPermanent:I = 0xa
+
+.field static final TRANSACTION_onLockoutTimed:I = 0x9
+
+.field static final TRANSACTION_onSessionClosed:I = 0x13
+
+
+# direct methods
+.method public constructor <init>()V
+    .locals 1
+
+    .line 93
+    invoke-direct {p0}, Landroid/os/Binder;-><init>()V
+
+    .line 94
+    invoke-virtual {p0}, Landroid/os/Binder;->markVintfStability()V
+
+    .line 95
+    sget-object v0, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-virtual {p0, p0, v0}, Landroid/os/Binder;->attachInterface(Landroid/os/IInterface;Ljava/lang/String;)V
+
+    return-void
+.end method
+
+.method public static asInterface(Landroid/os/IBinder;)Landroid/hardware/biometrics/face/ISessionCallback;
+    .locals 2
+
+    if-nez p0, :cond_0
+
+    const/4 p0, 0x0
+
+    return-object p0
+
+    .line 106
+    :cond_0
+    sget-object v0, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    invoke-interface {p0, v0}, Landroid/os/IBinder;->queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_1
+
+    .line 107
+    instance-of v1, v0, Landroid/hardware/biometrics/face/ISessionCallback;
+
+    if-eqz v1, :cond_1
+
+    .line 108
+    check-cast v0, Landroid/hardware/biometrics/face/ISessionCallback;
+
+    return-object v0
+
+    .line 110
+    :cond_1
+    new-instance v0, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;
+
+    invoke-direct {v0, p0}, Landroid/hardware/biometrics/face/ISessionCallback$Stub$Proxy;-><init>(Landroid/os/IBinder;)V
+
+    return-object v0
+.end method
+
+.method public static getDefaultTransactionName(I)Ljava/lang/String;
+    .locals 0
+
+    .line 0
+    packed-switch p0, :pswitch_data_0
+
+    packed-switch p0, :pswitch_data_1
+
+    const/4 p0, 0x0
+
+    return-object p0
+
+    :pswitch_0
+    const-string/jumbo p0, "getInterfaceVersion"
+
+    return-object p0
+
+    :pswitch_1
+    const-string/jumbo p0, "getInterfaceHash"
+
+    return-object p0
+
+    :pswitch_2
+    const-string/jumbo p0, "onSessionClosed"
+
+    return-object p0
+
+    :pswitch_3
+    const-string/jumbo p0, "onAuthenticatorIdInvalidated"
+
+    return-object p0
+
+    :pswitch_4
+    const-string/jumbo p0, "onAuthenticatorIdRetrieved"
+
+    return-object p0
+
+    :pswitch_5
+    const-string/jumbo p0, "onEnrollmentsRemoved"
+
+    return-object p0
+
+    :pswitch_6
+    const-string/jumbo p0, "onFeatureSet"
+
+    return-object p0
+
+    :pswitch_7
+    const-string/jumbo p0, "onFeaturesRetrieved"
+
+    return-object p0
+
+    :pswitch_8
+    const-string/jumbo p0, "onEnrollmentsEnumerated"
+
+    return-object p0
+
+    :pswitch_9
+    const-string/jumbo p0, "onInteractionDetected"
+
+    return-object p0
+
+    :pswitch_a
+    const-string/jumbo p0, "onLockoutCleared"
+
+    return-object p0
+
+    :pswitch_b
+    const-string/jumbo p0, "onLockoutPermanent"
+
+    return-object p0
+
+    :pswitch_c
+    const-string/jumbo p0, "onLockoutTimed"
+
+    return-object p0
+
+    :pswitch_d
+    const-string/jumbo p0, "onAuthenticationFailed"
+
+    return-object p0
+
+    :pswitch_e
+    const-string/jumbo p0, "onAuthenticationSucceeded"
+
+    return-object p0
+
+    :pswitch_f
+    const-string/jumbo p0, "onEnrollmentProgress"
+
+    return-object p0
+
+    :pswitch_10
+    const-string/jumbo p0, "onError"
+
+    return-object p0
+
+    :pswitch_11
+    const-string/jumbo p0, "onEnrollmentFrame"
+
+    return-object p0
+
+    :pswitch_12
+    const-string/jumbo p0, "onAuthenticationFrame"
+
+    return-object p0
+
+    :pswitch_13
+    const-string/jumbo p0, "onChallengeRevoked"
+
+    return-object p0
+
+    :pswitch_14
+    const-string/jumbo p0, "onChallengeGenerated"
+
+    return-object p0
+
+    :pswitch_data_0
+    .packed-switch 0x1
+        :pswitch_14
+        :pswitch_13
+        :pswitch_12
+        :pswitch_11
+        :pswitch_10
+        :pswitch_f
+        :pswitch_e
+        :pswitch_d
+        :pswitch_c
+        :pswitch_b
+        :pswitch_a
+        :pswitch_9
+        :pswitch_8
+        :pswitch_7
+        :pswitch_6
+        :pswitch_5
+        :pswitch_4
+        :pswitch_3
+        :pswitch_2
+    .end packed-switch
+
+    :pswitch_data_1
+    .packed-switch 0xfffffe
+        :pswitch_1
+        :pswitch_0
+    .end packed-switch
+.end method
+
+
+# virtual methods
+.method public asBinder()Landroid/os/IBinder;
+    .locals 0
+
+    .line 0
+    return-object p0
+.end method
+
+.method public getMaxTransactionId()I
+    .locals 0
+
+    .line 0
+    const p0, 0xfffffe
+
+    return p0
+.end method
+
+.method public getTransactionName(I)Ljava/lang/String;
+    .locals 0
+
+    .line 214
+    invoke-static {p1}, Landroid/hardware/biometrics/face/ISessionCallback$Stub;->getDefaultTransactionName(I)Ljava/lang/String;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+    .locals 4
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    .line 218
+    sget-object v0, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    const/4 v1, 0x1
+
+    if-lt p1, v1, :cond_0
+
+    const v2, 0xffffff
+
+    if-gt p1, v2, :cond_0
+
+    .line 220
+    invoke-virtual {p2, v0}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
+
+    :cond_0
+    sparse-switch p1, :sswitch_data_0
+
+    packed-switch p1, :pswitch_data_0
+
+    .line 408
+    invoke-super {p0, p1, p2, p3, p4}, Landroid/os/Binder;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+
+    move-result p0
+
+    return p0
+
+    .line 226
+    :sswitch_0
+    invoke-virtual {p3, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    return v1
+
+    .line 231
+    :sswitch_1
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 232
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISessionCallback;->getInterfaceVersion()I
+
+    move-result p0
+
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeInt(I)V
+
+    return v1
+
+    .line 237
+    :sswitch_2
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    .line 238
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISessionCallback;->getInterfaceHash()Ljava/lang/String;
+
+    move-result-object p0
+
+    invoke-virtual {p3, p0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
+
+    return v1
+
+    .line 402
+    :pswitch_0
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISessionCallback;->onSessionClosed()V
+
+    .line 403
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 394
+    :pswitch_1
+    invoke-virtual {p2}, Landroid/os/Parcel;->readLong()J
+
+    move-result-wide v2
+
+    .line 395
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 396
+    invoke-interface {p0, v2, v3}, Landroid/hardware/biometrics/face/ISessionCallback;->onAuthenticatorIdInvalidated(J)V
+
+    .line 397
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 385
+    :pswitch_2
+    invoke-virtual {p2}, Landroid/os/Parcel;->readLong()J
+
+    move-result-wide v2
+
+    .line 386
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 387
+    invoke-interface {p0, v2, v3}, Landroid/hardware/biometrics/face/ISessionCallback;->onAuthenticatorIdRetrieved(J)V
+
+    .line 388
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 376
+    :pswitch_3
+    invoke-virtual {p2}, Landroid/os/Parcel;->createIntArray()[I
+
+    move-result-object p1
+
+    .line 377
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 378
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISessionCallback;->onEnrollmentsRemoved([I)V
+
+    .line 379
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 367
+    :pswitch_4
+    invoke-virtual {p2}, Landroid/os/Parcel;->readByte()B
+
+    move-result p1
+
+    .line 368
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 369
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISessionCallback;->onFeatureSet(B)V
+
+    .line 370
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 358
+    :pswitch_5
+    invoke-virtual {p2}, Landroid/os/Parcel;->createByteArray()[B
+
+    move-result-object p1
+
+    .line 359
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 360
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISessionCallback;->onFeaturesRetrieved([B)V
+
+    .line 361
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 349
+    :pswitch_6
+    invoke-virtual {p2}, Landroid/os/Parcel;->createIntArray()[I
+
+    move-result-object p1
+
+    .line 350
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 351
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISessionCallback;->onEnrollmentsEnumerated([I)V
+
+    .line 352
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 342
+    :pswitch_7
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISessionCallback;->onInteractionDetected()V
+
+    .line 343
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 336
+    :pswitch_8
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISessionCallback;->onLockoutCleared()V
+
+    .line 337
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 330
+    :pswitch_9
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISessionCallback;->onLockoutPermanent()V
+
+    .line 331
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 322
+    :pswitch_a
+    invoke-virtual {p2}, Landroid/os/Parcel;->readLong()J
+
+    move-result-wide v2
+
+    .line 323
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 324
+    invoke-interface {p0, v2, v3}, Landroid/hardware/biometrics/face/ISessionCallback;->onLockoutTimed(J)V
+
+    .line 325
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 315
+    :pswitch_b
+    invoke-interface {p0}, Landroid/hardware/biometrics/face/ISessionCallback;->onAuthenticationFailed()V
+
+    .line 316
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto/16 :goto_0
+
+    .line 305
+    :pswitch_c
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result p1
+
+    .line 307
+    sget-object p4, Landroid/hardware/keymaster/HardwareAuthToken;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p4}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p4
+
+    check-cast p4, Landroid/hardware/keymaster/HardwareAuthToken;
+
+    .line 308
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 309
+    invoke-interface {p0, p1, p4}, Landroid/hardware/biometrics/face/ISessionCallback;->onAuthenticationSucceeded(ILandroid/hardware/keymaster/HardwareAuthToken;)V
+
+    .line 310
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 294
+    :pswitch_d
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result p1
+
+    .line 296
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result p4
+
+    .line 297
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 298
+    invoke-interface {p0, p1, p4}, Landroid/hardware/biometrics/face/ISessionCallback;->onEnrollmentProgress(II)V
+
+    .line 299
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 283
+    :pswitch_e
+    invoke-virtual {p2}, Landroid/os/Parcel;->readByte()B
+
+    move-result p1
+
+    .line 285
+    invoke-virtual {p2}, Landroid/os/Parcel;->readInt()I
+
+    move-result p4
+
+    .line 286
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 287
+    invoke-interface {p0, p1, p4}, Landroid/hardware/biometrics/face/ISessionCallback;->onError(BI)V
+
+    .line 288
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 274
+    :pswitch_f
+    sget-object p1, Landroid/hardware/biometrics/face/EnrollmentFrame;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    check-cast p1, Landroid/hardware/biometrics/face/EnrollmentFrame;
+
+    .line 275
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 276
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISessionCallback;->onEnrollmentFrame(Landroid/hardware/biometrics/face/EnrollmentFrame;)V
+
+    .line 277
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 265
+    :pswitch_10
+    sget-object p1, Landroid/hardware/biometrics/face/AuthenticationFrame;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p2, p1}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object p1
+
+    check-cast p1, Landroid/hardware/biometrics/face/AuthenticationFrame;
+
+    .line 266
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 267
+    invoke-interface {p0, p1}, Landroid/hardware/biometrics/face/ISessionCallback;->onAuthenticationFrame(Landroid/hardware/biometrics/face/AuthenticationFrame;)V
+
+    .line 268
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 256
+    :pswitch_11
+    invoke-virtual {p2}, Landroid/os/Parcel;->readLong()J
+
+    move-result-wide v2
+
+    .line 257
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 258
+    invoke-interface {p0, v2, v3}, Landroid/hardware/biometrics/face/ISessionCallback;->onChallengeRevoked(J)V
+
+    .line 259
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    goto :goto_0
+
+    .line 247
+    :pswitch_12
+    invoke-virtual {p2}, Landroid/os/Parcel;->readLong()J
+
+    move-result-wide v2
+
+    .line 248
+    invoke-virtual {p2}, Landroid/os/Parcel;->enforceNoDataAvail()V
+
+    .line 249
+    invoke-interface {p0, v2, v3}, Landroid/hardware/biometrics/face/ISessionCallback;->onChallengeGenerated(J)V
+
+    .line 250
+    invoke-virtual {p3}, Landroid/os/Parcel;->writeNoException()V
+
+    :goto_0
+    return v1
+
+    nop
+
+    :sswitch_data_0
+    .sparse-switch
+        0xfffffe -> :sswitch_2
+        0xffffff -> :sswitch_1
+        0x5f4e5446 -> :sswitch_0
+    .end sparse-switch
+
+    :pswitch_data_0
+    .packed-switch 0x1
+        :pswitch_12
+        :pswitch_11
+        :pswitch_10
+        :pswitch_f
+        :pswitch_e
+        :pswitch_d
+        :pswitch_c
+        :pswitch_b
+        :pswitch_a
+        :pswitch_9
+        :pswitch_8
+        :pswitch_7
+        :pswitch_6
+        :pswitch_5
+        :pswitch_4
+        :pswitch_3
+        :pswitch_2
+        :pswitch_1
+        :pswitch_0
+    .end packed-switch
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/ISessionCallback.smali b/smali/classes/android/hardware/biometrics/face/ISessionCallback.smali
new file mode 100644
index 00000000..93daab69
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/ISessionCallback.smali
@@ -0,0 +1,214 @@
+.class public interface abstract Landroid/hardware/biometrics/face/ISessionCallback;
+.super Ljava/lang/Object;
+.source "ISessionCallback.java"
+
+# interfaces
+.implements Landroid/os/IInterface;
+
+
+# annotations
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Landroid/hardware/biometrics/face/ISessionCallback$Stub;,
+        Landroid/hardware/biometrics/face/ISessionCallback$Default;
+    }
+.end annotation
+
+
+# static fields
+.field public static final DESCRIPTOR:Ljava/lang/String;
+
+.field public static final HASH:Ljava/lang/String; = "fca1ab84dda6c013b251270d848eb6d964a6d765"
+
+.field public static final VERSION:I = 0x3
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 3
+
+    const/16 v0, 0x24
+
+    const/16 v1, 0x2e
+
+    const-string v2, "android$hardware$biometrics$face$ISessionCallback"
+
+    .line 832
+    invoke-virtual {v2, v0, v1}, Ljava/lang/String;->replace(CC)Ljava/lang/String;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/hardware/biometrics/face/ISessionCallback;->DESCRIPTOR:Ljava/lang/String;
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public abstract getInterfaceHash()Ljava/lang/String;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract getInterfaceVersion()I
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onAuthenticationFailed()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onAuthenticationFrame(Landroid/hardware/biometrics/face/AuthenticationFrame;)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onAuthenticationSucceeded(ILandroid/hardware/keymaster/HardwareAuthToken;)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onAuthenticatorIdInvalidated(J)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onAuthenticatorIdRetrieved(J)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onChallengeGenerated(J)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onChallengeRevoked(J)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onEnrollmentFrame(Landroid/hardware/biometrics/face/EnrollmentFrame;)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onEnrollmentProgress(II)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onEnrollmentsEnumerated([I)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onEnrollmentsRemoved([I)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onError(BI)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onFeatureSet(B)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onFeaturesRetrieved([B)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onInteractionDetected()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onLockoutCleared()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onLockoutPermanent()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onLockoutTimed(J)V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
+
+.method public abstract onSessionClosed()V
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/SensorProps$1.smali b/smali/classes/android/hardware/biometrics/face/SensorProps$1.smali
new file mode 100644
index 00000000..1329f01a
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/SensorProps$1.smali
@@ -0,0 +1,84 @@
+.class Landroid/hardware/biometrics/face/SensorProps$1;
+.super Ljava/lang/Object;
+.source "SensorProps.java"
+
+# interfaces
+.implements Landroid/os/Parcelable$Creator;
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/hardware/biometrics/face/SensorProps;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+.annotation system Ldalvik/annotation/Signature;
+    value = {
+        "Ljava/lang/Object;",
+        "Landroid/os/Parcelable$Creator<",
+        "Landroid/hardware/biometrics/face/SensorProps;",
+        ">;"
+    }
+.end annotation
+
+
+# direct methods
+.method constructor <init>()V
+    .locals 0
+
+    .line 19
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/SensorProps;
+    .locals 0
+
+    .line 22
+    new-instance p0, Landroid/hardware/biometrics/face/SensorProps;
+
+    invoke-direct {p0}, Landroid/hardware/biometrics/face/SensorProps;-><init>()V
+
+    .line 23
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/SensorProps;->readFromParcel(Landroid/os/Parcel;)V
+
+    return-object p0
+.end method
+
+.method public bridge synthetic createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
+    .locals 0
+
+    .line 19
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/SensorProps$1;->createFromParcel(Landroid/os/Parcel;)Landroid/hardware/biometrics/face/SensorProps;
+
+    move-result-object p0
+
+    return-object p0
+.end method
+
+.method public newArray(I)[Landroid/hardware/biometrics/face/SensorProps;
+    .locals 0
+
+    .line 28
+    new-array p0, p1, [Landroid/hardware/biometrics/face/SensorProps;
+
+    return-object p0
+.end method
+
+.method public bridge synthetic newArray(I)[Ljava/lang/Object;
+    .locals 0
+
+    .line 19
+    invoke-virtual {p0, p1}, Landroid/hardware/biometrics/face/SensorProps$1;->newArray(I)[Landroid/hardware/biometrics/face/SensorProps;
+
+    move-result-object p0
+
+    return-object p0
+.end method
diff --git a/smali/classes/android/hardware/biometrics/face/SensorProps.smali b/smali/classes/android/hardware/biometrics/face/SensorProps.smali
new file mode 100644
index 00000000..c917d799
--- /dev/null
+++ b/smali/classes/android/hardware/biometrics/face/SensorProps.smali
@@ -0,0 +1,662 @@
+.class public Landroid/hardware/biometrics/face/SensorProps;
+.super Ljava/lang/Object;
+.source "SensorProps.java"
+
+# interfaces
+.implements Landroid/os/Parcelable;
+
+
+# static fields
+.field public static final CREATOR:Landroid/os/Parcelable$Creator;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/Parcelable$Creator<",
+            "Landroid/hardware/biometrics/face/SensorProps;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+
+# instance fields
+.field public commonProps:Landroid/hardware/biometrics/common/CommonProps;
+
+.field public enrollPreviewHeight:I
+
+.field public enrollPreviewScale:F
+
+.field public enrollPreviewWidth:I
+
+.field public enrollTranslationX:F
+
+.field public enrollTranslationY:F
+
+.field public halControlsPreview:Z
+
+.field public previewDisplayId:I
+
+.field public sensorType:B
+
+.field public supportsDetectInteraction:Z
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .locals 1
+
+    .line 19
+    new-instance v0, Landroid/hardware/biometrics/face/SensorProps$1;
+
+    invoke-direct {v0}, Landroid/hardware/biometrics/face/SensorProps$1;-><init>()V
+
+    sput-object v0, Landroid/hardware/biometrics/face/SensorProps;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .locals 2
+
+    .line 5
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    const/4 v0, 0x0
+
+    .line 8
+    iput-byte v0, p0, Landroid/hardware/biometrics/face/SensorProps;->sensorType:B
+
+    .line 9
+    iput-boolean v0, p0, Landroid/hardware/biometrics/face/SensorProps;->halControlsPreview:Z
+
+    .line 10
+    iput v0, p0, Landroid/hardware/biometrics/face/SensorProps;->previewDisplayId:I
+
+    .line 11
+    iput v0, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewWidth:I
+
+    .line 12
+    iput v0, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewHeight:I
+
+    const/4 v1, 0x0
+
+    .line 13
+    iput v1, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollTranslationX:F
+
+    .line 14
+    iput v1, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollTranslationY:F
+
+    .line 15
+    iput v1, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewScale:F
+
+    .line 16
+    iput-boolean v0, p0, Landroid/hardware/biometrics/face/SensorProps;->supportsDetectInteraction:Z
+
+    return-void
+.end method
+
+.method private describeContents(Ljava/lang/Object;)I
+    .locals 1
+
+    const/4 p0, 0x0
+
+    if-nez p1, :cond_0
+
+    return p0
+
+    .line 91
+    :cond_0
+    instance-of v0, p1, Landroid/os/Parcelable;
+
+    if-eqz v0, :cond_1
+
+    .line 92
+    check-cast p1, Landroid/os/Parcelable;
+
+    invoke-interface {p1}, Landroid/os/Parcelable;->describeContents()I
+
+    move-result p0
+
+    :cond_1
+    return p0
+.end method
+
+
+# virtual methods
+.method public describeContents()I
+    .locals 1
+
+    .line 86
+    iget-object v0, p0, Landroid/hardware/biometrics/face/SensorProps;->commonProps:Landroid/hardware/biometrics/common/CommonProps;
+
+    invoke-direct {p0, v0}, Landroid/hardware/biometrics/face/SensorProps;->describeContents(Ljava/lang/Object;)I
+
+    move-result p0
+
+    or-int/lit8 p0, p0, 0x0
+
+    return p0
+.end method
+
+.method public final getStability()I
+    .locals 0
+
+    .line 0
+    const/4 p0, 0x1
+
+    return p0
+.end method
+
+.method public final readFromParcel(Landroid/os/Parcel;)V
+    .locals 5
+
+    .line 52
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    .line 53
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v1
+
+    const/4 v2, 0x4
+
+    const-string v3, "Overflow in the size of parcelable"
+
+    const v4, 0x7fffffff
+
+    if-lt v1, v2, :cond_15
+
+    .line 56
+    :try_start_0
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_1
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_0
+
+    :goto_0
+    add-int/2addr v0, v1
+
+    .line 80
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 78
+    :cond_0
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 57
+    :cond_1
+    :try_start_1
+    sget-object v2, Landroid/hardware/biometrics/common/CommonProps;->CREATOR:Landroid/os/Parcelable$Creator;
+
+    invoke-virtual {p1, v2}, Landroid/os/Parcel;->readTypedObject(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/hardware/biometrics/common/CommonProps;
+
+    iput-object v2, p0, Landroid/hardware/biometrics/face/SensorProps;->commonProps:Landroid/hardware/biometrics/common/CommonProps;
+
+    .line 58
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_3
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_2
+
+    goto :goto_0
+
+    .line 78
+    :cond_2
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 59
+    :cond_3
+    :try_start_2
+    invoke-virtual {p1}, Landroid/os/Parcel;->readByte()B
+
+    move-result v2
+
+    iput-byte v2, p0, Landroid/hardware/biometrics/face/SensorProps;->sensorType:B
+
+    .line 60
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_5
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_4
+
+    goto :goto_0
+
+    .line 78
+    :cond_4
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 61
+    :cond_5
+    :try_start_3
+    invoke-virtual {p1}, Landroid/os/Parcel;->readBoolean()Z
+
+    move-result v2
+
+    iput-boolean v2, p0, Landroid/hardware/biometrics/face/SensorProps;->halControlsPreview:Z
+
+    .line 62
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_3
+    .catchall {:try_start_3 .. :try_end_3} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_7
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_6
+
+    goto :goto_0
+
+    .line 78
+    :cond_6
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 63
+    :cond_7
+    :try_start_4
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/SensorProps;->previewDisplayId:I
+
+    .line 64
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_4
+    .catchall {:try_start_4 .. :try_end_4} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_9
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_8
+
+    goto :goto_0
+
+    .line 78
+    :cond_8
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 65
+    :cond_9
+    :try_start_5
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewWidth:I
+
+    .line 66
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_5
+    .catchall {:try_start_5 .. :try_end_5} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_b
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_a
+
+    goto :goto_0
+
+    .line 78
+    :cond_a
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 67
+    :cond_b
+    :try_start_6
+    invoke-virtual {p1}, Landroid/os/Parcel;->readInt()I
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewHeight:I
+
+    .line 68
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_6
+    .catchall {:try_start_6 .. :try_end_6} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_d
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_c
+
+    goto/16 :goto_0
+
+    .line 78
+    :cond_c
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 69
+    :cond_d
+    :try_start_7
+    invoke-virtual {p1}, Landroid/os/Parcel;->readFloat()F
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollTranslationX:F
+
+    .line 70
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_7
+    .catchall {:try_start_7 .. :try_end_7} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_f
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_e
+
+    goto/16 :goto_0
+
+    .line 78
+    :cond_e
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 71
+    :cond_f
+    :try_start_8
+    invoke-virtual {p1}, Landroid/os/Parcel;->readFloat()F
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollTranslationY:F
+
+    .line 72
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_8
+    .catchall {:try_start_8 .. :try_end_8} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_11
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_10
+
+    goto/16 :goto_0
+
+    .line 78
+    :cond_10
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 73
+    :cond_11
+    :try_start_9
+    invoke-virtual {p1}, Landroid/os/Parcel;->readFloat()F
+
+    move-result v2
+
+    iput v2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewScale:F
+
+    .line 74
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v2
+    :try_end_9
+    .catchall {:try_start_9 .. :try_end_9} :catchall_0
+
+    sub-int/2addr v2, v0
+
+    if-lt v2, v1, :cond_13
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_12
+
+    goto/16 :goto_0
+
+    .line 78
+    :cond_12
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    .line 75
+    :cond_13
+    :try_start_a
+    invoke-virtual {p1}, Landroid/os/Parcel;->readBoolean()Z
+
+    move-result v2
+
+    iput-boolean v2, p0, Landroid/hardware/biometrics/face/SensorProps;->supportsDetectInteraction:Z
+    :try_end_a
+    .catchall {:try_start_a .. :try_end_a} :catchall_0
+
+    sub-int/2addr v4, v1
+
+    if-gt v0, v4, :cond_14
+
+    add-int/2addr v0, v1
+
+    .line 80
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+
+    .line 78
+    :cond_14
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :catchall_0
+    move-exception p0
+
+    goto :goto_1
+
+    .line 55
+    :cond_15
+    :try_start_b
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    const-string v2, "Parcelable too small"
+
+    invoke-direct {p0, v2}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+    :try_end_b
+    .catchall {:try_start_b .. :try_end_b} :catchall_0
+
+    :goto_1
+    sub-int/2addr v4, v1
+
+    if-le v0, v4, :cond_16
+
+    .line 78
+    new-instance p0, Landroid/os/BadParcelableException;
+
+    invoke-direct {p0, v3}, Landroid/os/BadParcelableException;-><init>(Ljava/lang/String;)V
+
+    throw p0
+
+    :cond_16
+    add-int/2addr v0, v1
+
+    .line 80
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    .line 81
+    throw p0
+.end method
+
+.method public final writeToParcel(Landroid/os/Parcel;I)V
+    .locals 2
+
+    .line 33
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result v0
+
+    const/4 v1, 0x0
+
+    .line 34
+    invoke-virtual {p1, v1}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 35
+    iget-object v1, p0, Landroid/hardware/biometrics/face/SensorProps;->commonProps:Landroid/hardware/biometrics/common/CommonProps;
+
+    invoke-virtual {p1, v1, p2}, Landroid/os/Parcel;->writeTypedObject(Landroid/os/Parcelable;I)V
+
+    .line 36
+    iget-byte p2, p0, Landroid/hardware/biometrics/face/SensorProps;->sensorType:B
+
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeByte(B)V
+
+    .line 37
+    iget-boolean p2, p0, Landroid/hardware/biometrics/face/SensorProps;->halControlsPreview:Z
+
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeBoolean(Z)V
+
+    .line 38
+    iget p2, p0, Landroid/hardware/biometrics/face/SensorProps;->previewDisplayId:I
+
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 39
+    iget p2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewWidth:I
+
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 40
+    iget p2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewHeight:I
+
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 41
+    iget p2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollTranslationX:F
+
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeFloat(F)V
+
+    .line 42
+    iget p2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollTranslationY:F
+
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeFloat(F)V
+
+    .line 43
+    iget p2, p0, Landroid/hardware/biometrics/face/SensorProps;->enrollPreviewScale:F
+
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeFloat(F)V
+
+    .line 44
+    iget-boolean p0, p0, Landroid/hardware/biometrics/face/SensorProps;->supportsDetectInteraction:Z
+
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->writeBoolean(Z)V
+
+    .line 45
+    invoke-virtual {p1}, Landroid/os/Parcel;->dataPosition()I
+
+    move-result p0
+
+    .line 46
+    invoke-virtual {p1, v0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    sub-int p2, p0, v0
+
+    .line 47
+    invoke-virtual {p1, p2}, Landroid/os/Parcel;->writeInt(I)V
+
+    .line 48
+    invoke-virtual {p1, p0}, Landroid/os/Parcel;->setDataPosition(I)V
+
+    return-void
+.end method
diff --git a/smali/classes/com/android/server/biometrics/SensorConfig.smali b/smali/classes/com/android/server/biometrics/SensorConfig.smali
index 059c4bf5..ce6487c4 100644
--- a/smali/classes/com/android/server/biometrics/SensorConfig.smali
+++ b/smali/classes/com/android/server/biometrics/SensorConfig.smali
@@ -6,7 +6,7 @@
 # instance fields
 .field public final id:I
 
-.field final modality:I
+.field public final modality:I
 
 .field public final strength:I
 
diff --git a/smali/classes/com/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0.smali b/smali/classes/com/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0.smali
index 53f2e76f..b1c44c95 100644
--- a/smali/classes/com/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0.smali
+++ b/smali/classes/com/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0.smali
@@ -1,6 +1,6 @@
 .class public final synthetic Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;
 .super Ljava/lang/Object;
-.source "D8$$SyntheticClass"
+.source "R8$$SyntheticClass"
 
 # interfaces
 .implements Ljava/util/function/Supplier;
@@ -9,11 +9,11 @@
 # instance fields
 .field public final synthetic f$0:Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;
 
-.field public final synthetic f$1:Landroid/hardware/face/FaceSensorConfigurations;
+.field public final synthetic f$1:Ljava/util/List;
 
 
 # direct methods
-.method public synthetic constructor <init>(Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;Landroid/hardware/face/FaceSensorConfigurations;)V
+.method public synthetic constructor <init>(Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;Ljava/util/List;)V
     .locals 0
 
     .line 0
@@ -21,7 +21,7 @@
 
     iput-object p1, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;->f$0:Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;
 
-    iput-object p2, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;->f$1:Landroid/hardware/face/FaceSensorConfigurations;
+    iput-object p2, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;->f$1:Ljava/util/List;
 
     return-void
 .end method
@@ -34,9 +34,9 @@
     .line 0
     iget-object v0, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;->f$0:Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;
 
-    iget-object v1, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;->f$1:Landroid/hardware/face/FaceSensorConfigurations;
+    iget-object v1, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;->f$1:Ljava/util/List;
 
-    invoke-static {v0, v1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->$r8$lambda$PVF4Rbb91-Vs1Wnhn3o8HZ3asNk(Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;Landroid/hardware/face/FaceSensorConfigurations;)Ljava/util/List;
+    invoke-static {v0, v1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->$r8$lambda$4XliW2xq4wofRdGW4e7ksJZVYo4(Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;Ljava/util/List;)Ljava/util/List;
 
     move-result-object v0
 
diff --git a/smali/classes/com/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper.smali b/smali/classes/com/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper.smali
index bcdc7f67..5e3442ed 100644
--- a/smali/classes/com/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper.smali
+++ b/smali/classes/com/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper.smali
@@ -19,10 +19,11 @@
 
 
 # direct methods
-.method public static synthetic $r8$lambda$PVF4Rbb91-Vs1Wnhn3o8HZ3asNk(Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;Landroid/hardware/face/FaceSensorConfigurations;)Ljava/util/List;
+.method public static synthetic $r8$lambda$4XliW2xq4wofRdGW4e7ksJZVYo4(Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;Ljava/util/List;)Ljava/util/List;
     .locals 0
 
-    invoke-direct {p0, p1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->lambda$registerAuthenticators$0(Landroid/hardware/face/FaceSensorConfigurations;)Ljava/util/List;
+    .line 0
+    invoke-direct {p0, p1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->lambda$registerAuthenticators$0(Ljava/util/List;)Ljava/util/List;
 
     move-result-object p0
 
@@ -208,6 +209,272 @@
     return-object v2
 .end method
 
+.method private filterAvailableHalInstances(Ljava/util/List;Ljava/util/List;)Landroid/util/Pair;
+    .locals 2
+    .param p1    # Ljava/util/List;
+        .annotation build Landroid/annotation/NonNull;
+        .end annotation
+    .end param
+    .param p2    # Ljava/util/List;
+        .annotation build Landroid/annotation/NonNull;
+        .end annotation
+    .end param
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/util/List<",
+            "Landroid/hardware/face/FaceSensorPropertiesInternal;",
+            ">;",
+            "Ljava/util/List<",
+            "Ljava/lang/String;",
+            ">;)",
+            "Landroid/util/Pair<",
+            "Ljava/util/List<",
+            "Landroid/hardware/face/FaceSensorPropertiesInternal;",
+            ">;",
+            "Ljava/util/List<",
+            "Ljava/lang/String;",
+            ">;>;"
+        }
+    .end annotation
+
+    .line 770
+    invoke-interface {p1}, Ljava/util/List;->size()I
+
+    move-result v0
+
+    invoke-interface {p2}, Ljava/util/List;->size()I
+
+    move-result v1
+
+    add-int/2addr v0, v1
+
+    const/4 v1, 0x1
+
+    if-gt v0, v1, :cond_0
+
+    .line 771
+    new-instance v0, Landroid/util/Pair;
+
+    invoke-direct {v0, p1, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V
+
+    return-object v0
+
+    .line 774
+    :cond_0
+    invoke-static {}, Lcom/android/server/biometrics/Flags;->faceVhalFeature()Z
+
+    .line 777
+    const-string v0, "FaceService"
+
+    const-string v1, "Face VHAL feature is off"
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    .line 780
+    const-string/jumbo v0, "virtual"
+
+    invoke-interface {p2, v0}, Ljava/util/List;->indexOf(Ljava/lang/Object;)I
+
+    move-result v0
+
+    .line 781
+    invoke-static {}, Lcom/android/server/biometrics/Flags;->faceVhalFeature()Z
+
+    .line 792
+    new-instance v1, Ljava/util/ArrayList;
+
+    invoke-direct {v1, p2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V
+
+    .line 793
+    const/4 p2, -0x1
+
+    if-eq v0, p2, :cond_1
+
+    .line 794
+    invoke-interface {v1, v0}, Ljava/util/List;->remove(I)Ljava/lang/Object;
+
+    .line 796
+    :cond_1
+    new-instance p2, Landroid/util/Pair;
+
+    invoke-direct {p2, p1, v1}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V
+
+    return-object p2
+.end method
+
+.method private getAidlProviders(Ljava/util/List;)Ljava/util/List;
+    .locals 5
+    .param p1    # Ljava/util/List;
+        .annotation build Landroid/annotation/NonNull;
+        .end annotation
+    .end param
+    .annotation build Landroid/annotation/NonNull;
+    .end annotation
+
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/util/List<",
+            "Ljava/lang/String;",
+            ">;)",
+            "Ljava/util/List<",
+            "Lcom/android/server/biometrics/sensors/face/ServiceProvider;",
+            ">;"
+        }
+    .end annotation
+
+    .line 684
+    new-instance v0, Ljava/util/ArrayList;
+
+    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V
+
+    .line 686
+    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;
+
+    move-result-object p1
+
+    :goto_0
+    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_0
+
+    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Ljava/lang/String;
+
+    .line 687
+    iget-object v2, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
+
+    invoke-static {v2}, Lcom/android/server/biometrics/sensors/face/FaceService;->-$$Nest$fgetmFaceProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/function/Function;
+
+    move-result-object v2
+
+    invoke-interface {v2, v1}, Ljava/util/function/Function;->apply(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/biometrics/sensors/face/aidl/FaceProvider;
+
+    .line 688
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Adding AIDL provider: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string v3, "FaceService"
+
+    invoke-static {v3, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    .line 689
+    invoke-interface {v0, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+
+    .line 690
+    goto :goto_0
+
+    .line 692
+    :cond_0
+    return-object v0
+.end method
+
+.method private getHidlProviders(Ljava/util/List;)Ljava/util/List;
+    .locals 6
+    .param p1    # Ljava/util/List;
+        .annotation build Landroid/annotation/NonNull;
+        .end annotation
+    .end param
+    .annotation build Landroid/annotation/NonNull;
+    .end annotation
+
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/util/List<",
+            "Landroid/hardware/face/FaceSensorPropertiesInternal;",
+            ">;)",
+            "Ljava/util/List<",
+            "Lcom/android/server/biometrics/sensors/face/ServiceProvider;",
+            ">;"
+        }
+    .end annotation
+
+    .line 670
+    new-instance v0, Ljava/util/ArrayList;
+
+    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V
+
+    .line 672
+    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;
+
+    move-result-object p1
+
+    :goto_0
+    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_0
+
+    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/hardware/face/FaceSensorPropertiesInternal;
+
+    .line 673
+    iget-object v2, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
+
+    .line 674
+    invoke-virtual {v2}, Lcom/android/server/SystemService;->getContext()Landroid/content/Context;
+
+    move-result-object v2
+
+    iget-object v3, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
+
+    invoke-static {v3}, Lcom/android/server/biometrics/sensors/face/FaceService;->-$$Nest$fgetmBiometricStateCallback(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/BiometricStateCallback;
+
+    move-result-object v3
+
+    iget-object v4, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
+
+    invoke-static {v4}, Lcom/android/server/biometrics/sensors/face/FaceService;->-$$Nest$fgetmAuthenticationStateListeners(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/AuthenticationStateListeners;
+
+    move-result-object v4
+
+    iget-object v5, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
+
+    invoke-static {v5}, Lcom/android/server/biometrics/sensors/face/FaceService;->-$$Nest$fgetmLockoutResetDispatcher(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/LockoutResetDispatcher;
+
+    move-result-object v5
+
+    invoke-static {v2, v3, v4, v1, v5}, Lcom/android/server/biometrics/sensors/face/hidl/Face10;->newInstance(Landroid/content/Context;Lcom/android/server/biometrics/sensors/BiometricStateCallback;Lcom/android/server/biometrics/sensors/AuthenticationStateListeners;Landroid/hardware/face/FaceSensorPropertiesInternal;Lcom/android/server/biometrics/sensors/LockoutResetDispatcher;)Lcom/android/server/biometrics/sensors/face/hidl/Face10;
+
+    move-result-object v1
+
+    .line 673
+    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+
+    .line 677
+    goto :goto_0
+
+    .line 679
+    :cond_0
+    return-object v0
+.end method
+
 .method private getProviders(Landroid/hardware/face/FaceSensorConfigurations;)Ljava/util/List;
     .locals 4
     .param p1, "faceSensorConfigurations"    # Landroid/hardware/face/FaceSensorConfigurations;
@@ -257,15 +524,71 @@
     return-object v0
 .end method
 
-.method private synthetic lambda$registerAuthenticators$0(Landroid/hardware/face/FaceSensorConfigurations;)Ljava/util/List;
-    .locals 1
-    .param p1, "faceSensorConfigurations"    # Landroid/hardware/face/FaceSensorConfigurations;
+.method private synthetic lambda$registerAuthenticators$0(Ljava/util/List;)Ljava/util/List;
+    .locals 2
 
-    .line 748
-    invoke-direct {p0, p1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->getProviders(Landroid/hardware/face/FaceSensorConfigurations;)Ljava/util/List;
+    .line 701
+    new-instance v0, Ljava/util/ArrayList;
 
-    move-result-object v0
+    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V
+
+    .line 702
+    iget-object v1, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
+
+    invoke-static {v1}, Lcom/android/server/biometrics/sensors/face/FaceService;->-$$Nest$fgetmAidlInstanceNameSupplier(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/function/Supplier;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, [Ljava/lang/String;
+
+    .line 703
+    if-eqz v1, :cond_0
+
+    .line 704
+    invoke-static {v1}, Lcom/google/android/collect/Lists;->newArrayList([Ljava/lang/Object;)Ljava/util/ArrayList;
+
+    move-result-object v1
 
+    invoke-interface {v0, v1}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z
+
+    .line 708
+    :cond_0
+    invoke-direct {p0, p1, v0}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->filterAvailableHalInstances(Ljava/util/List;Ljava/util/List;)Landroid/util/Pair;
+
+    move-result-object p1
+
+    .line 710
+    new-instance v0, Ljava/util/ArrayList;
+
+    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V
+
+    .line 711
+    iget-object v1, p1, Landroid/util/Pair;->first:Ljava/lang/Object;
+
+    check-cast v1, Ljava/util/List;
+
+    invoke-direct {p0, v1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->getHidlProviders(Ljava/util/List;)Ljava/util/List;
+
+    move-result-object v1
+
+    invoke-interface {v0, v1}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z
+
+    .line 712
+    iget-object p1, p1, Landroid/util/Pair;->second:Ljava/lang/Object;
+
+    check-cast p1, Ljava/util/List;
+
+    invoke-direct {p0, p1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->getAidlProviders(Ljava/util/List;)Ljava/util/List;
+
+    move-result-object p1
+
+    invoke-interface {v0, p1}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z
+
+    .line 713
     return-object v0
 .end method
 
@@ -1693,6 +2016,24 @@
     return-wide v1
 .end method
 
+.method public getConfiguration(Landroid/content/Context;)[Ljava/lang/String;
+    .locals 2
+    .param p1, "context"    # Landroid/content/Context;
+
+    .line 137
+    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;
+
+    move-result-object v0
+
+    const v1, 0x1070025
+
+    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getStringArray(I)[Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
 .method public getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;
     .locals 3
     .param p1, "sensorId"    # I
@@ -1898,6 +2239,89 @@
     return-void
 .end method
 
+.method public getHidlFaceSensorProps(II)Landroid/hardware/face/FaceSensorPropertiesInternal;
+    .locals 14
+    .param p1, "sensorId"    # I
+    .param p2, "strength"    # I
+
+    .line 1037
+    iget-object v0, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
+
+    invoke-virtual {v0}, Lcom/android/server/biometrics/sensors/face/FaceService;->getContext()Landroid/content/Context;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;
+
+    move-result-object v0
+
+    const v1, 0x1110197
+
+    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z
+
+    move-result v0
+
+    .line 1039
+    .local v0, "supportsSelfIllumination":Z
+    iget-object v1, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
+
+    invoke-virtual {v1}, Lcom/android/server/biometrics/sensors/face/FaceService;->getContext()Landroid/content/Context;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;
+
+    move-result-object v1
+
+    const v2, 0x10e0093
+
+    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I
+
+    move-result v1
+
+    .line 1041
+    .local v1, "maxTemplatesAllowed":I
+    new-instance v6, Ljava/util/ArrayList;
+
+    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V
+
+    .line 1042
+    .local v6, "componentInfo":Ljava/util/List;, "Ljava/util/List<Landroid/hardware/biometrics/ComponentInfoInternal;>;"
+    const/4 v11, 0x0
+
+    .line 1043
+    .local v11, "supportsFaceDetect":Z
+    const/4 v12, 0x1
+
+    .line 1044
+    .local v12, "resetLockoutRequiresChallenge":Z
+    new-instance v13, Landroid/hardware/face/FaceSensorPropertiesInternal;
+
+    .line 1045
+    invoke-static/range {p2 .. p2}, Lcom/android/server/biometrics/Utils;->authenticatorStrengthToPropertyStrength(I)I
+
+    move-result v4
+
+    const/4 v8, 0x0
+
+    const/4 v10, 0x1
+
+    const/4 v7, 0x0
+
+    move-object v2, v13
+
+    move v3, p1
+
+    move v5, v1
+
+    move v9, v0
+
+    invoke-direct/range {v2 .. v10}, Landroid/hardware/face/FaceSensorPropertiesInternal;-><init>(IIILjava/util/List;IZZZ)V
+
+    .line 1044
+    return-object v13
+.end method
+
 .method public getLockoutModeForUser(II)I
     .locals 3
     .param p1, "sensorId"    # I
@@ -2503,31 +2927,196 @@
 .end method
 
 .method public registerAuthenticators(Landroid/hardware/face/FaceSensorConfigurations;)V
-    .locals 2
+    .locals 9
     .param p1, "faceSensorConfigurations"    # Landroid/hardware/face/FaceSensorConfigurations;
+    .annotation build Landroid/annotation/EnforcePermission;
+        value = "android.permission.USE_BIOMETRIC_INTERNAL"
+    .end annotation
 
     .line 742
     invoke-super {p0}, Landroid/hardware/face/IFaceService$Stub;->registerAuthenticators_enforcePermission()V
 
     .line 744
-    invoke-virtual {p1}, Landroid/hardware/face/FaceSensorConfigurations;->hasSensorConfigurations()Z
+    iget-object v0, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
 
-    move-result v0
+    invoke-virtual {v0}, Lcom/android/server/biometrics/sensors/face/FaceService;->getContext()Landroid/content/Context;
 
-    if-nez v0, :cond_0
+    move-result-object v0
 
-    .line 745
-    const-string v0, "FaceService"
+    invoke-virtual {p0, v0}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->getConfiguration(Landroid/content/Context;)[Ljava/lang/String;
 
-    const-string v1, "No face sensors to register."
+    move-result-object v1
 
-    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
+    .local v1, "configStrings":[Ljava/lang/String;
+    array-length v2, v1
 
-    .line 746
-    return-void
+    new-array v2, v2, [Lcom/android/server/biometrics/SensorConfig;
+
+    .local v2, "hidlConfigs":[Lcom/android/server/biometrics/SensorConfig;
+    const/4 v3, 0x0
+
+    .local v3, "i":I
+    :goto_0
+    array-length v4, v1
+
+    if-ge v3, v4, :cond_0
+
+    new-instance v4, Lcom/android/server/biometrics/SensorConfig;
+
+    aget-object v5, v1, v3
+
+    invoke-direct {v4, v5}, Lcom/android/server/biometrics/SensorConfig;-><init>(Ljava/lang/String;)V
+
+    aput-object v4, v2, v3
+
+    add-int/lit8 v3, v3, 0x1
+
+    goto :goto_0
 
-    .line 748
     :cond_0
+    move-object v0, v2
+
+    new-instance v1, Ljava/util/ArrayList;
+
+    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V
+
+    const-string v2, "FaceService"
+
+    if-eqz v0, :cond_1
+
+    array-length v3, v0
+
+    const/4 v4, 0x0
+
+    :goto_1
+    nop
+
+    if-ge v4, v3, :cond_1
+
+    aget-object v5, v0, v4
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Registering HIDL ID: "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    iget v7, v5, Lcom/android/server/biometrics/SensorConfig;->id:I
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    const-string v7, " Modality: "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    iget v7, v5, Lcom/android/server/biometrics/SensorConfig;->modality:I
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    const-string v7, " Strength: "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    iget v7, v5, Lcom/android/server/biometrics/SensorConfig;->strength:I
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v2, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget v6, v5, Lcom/android/server/biometrics/SensorConfig;->modality:I
+
+    sparse-switch v6, :sswitch_data_0
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Unknown modality: "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    iget v5, v5, Lcom/android/server/biometrics/SensorConfig;->modality:I
+
+    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_2
+
+    :sswitch_0
+    iget v6, v5, Lcom/android/server/biometrics/SensorConfig;->id:I
+
+    iget v5, v5, Lcom/android/server/biometrics/SensorConfig;->strength:I
+
+    invoke-virtual {p0, v6, v5}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->getHidlFaceSensorProps(II)Landroid/hardware/face/FaceSensorPropertiesInternal;
+
+    move-result-object v5
+
+    invoke-interface {v1, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+
+    goto :goto_2
+
+    :goto_2
+    add-int/lit8 v4, v4, 0x1
+
+    goto :goto_1
+
+    .line 991
+    :cond_1
+    :try_start_0
+    invoke-virtual {p0, v1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->registerAuthenticators(Ljava/util/List;)V
+    :try_end_0
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
+
+    :goto_3
+    goto :goto_4
+
+    .line 994
+    :catch_0
+    move-exception v3
+
+    const-string v4, "RemoteException when registering face authenticators"
+
+    invoke-static {v2, v4, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_3
+
+    .line 999
+    :goto_4
+    return-void
+
+    :sswitch_data_0
+    .sparse-switch
+        0x8 -> :sswitch_0
+    .end sparse-switch
+.end method
+
+.method public registerAuthenticators(Ljava/util/List;)V
+    .locals 2
+    .param p1    # Ljava/util/List;
+        .annotation build Landroid/annotation/NonNull;
+        .end annotation
+    .end param
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/util/List<",
+            "Landroid/hardware/face/FaceSensorPropertiesInternal;",
+            ">;)V"
+        }
+    .end annotation
+
+    .line 700
     iget-object v0, p0, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;->this$0:Lcom/android/server/biometrics/sensors/face/FaceService;
 
     invoke-static {v0}, Lcom/android/server/biometrics/sensors/face/FaceService;->-$$Nest$fgetmRegistry(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/face/FaceServiceRegistry;
@@ -2536,11 +3125,11 @@
 
     new-instance v1, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;
 
-    invoke-direct {v1, p0, p1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;Landroid/hardware/face/FaceSensorConfigurations;)V
+    invoke-direct {v1, p0, p1}, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper;Ljava/util/List;)V
 
-    invoke-virtual {v0, v1}, Lcom/android/server/biometrics/sensors/face/FaceServiceRegistry;->registerAll(Ljava/util/function/Supplier;)V
+    invoke-virtual {v0, v1}, Lcom/android/server/biometrics/sensors/BiometricServiceRegistry;->registerAll(Ljava/util/function/Supplier;)V
 
-    .line 749
+    .line 715
     return-void
 .end method
 
diff --git a/smali/classes/com/android/server/biometrics/sensors/face/FaceService.smali b/smali/classes/com/android/server/biometrics/sensors/face/FaceService.smali
index d1625529..bba52ea0 100644
--- a/smali/classes/com/android/server/biometrics/sensors/face/FaceService.smali
+++ b/smali/classes/com/android/server/biometrics/sensors/face/FaceService.smali
@@ -89,6 +89,15 @@
     return-object p0
 .end method
 
+.method static bridge synthetic -$$Nest$fgetmAidlInstanceNameSupplier(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/function/Supplier;
+    .locals 0
+
+    .line 0
+    iget-object p0, p0, Lcom/android/server/biometrics/sensors/face/FaceService;->mAidlInstanceNameSupplier:Ljava/util/function/Supplier;
+
+    return-object p0
+.end method
+
 .method static bridge synthetic -$$Nest$fgetmAuthenticationStateListeners(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/AuthenticationStateListeners;
     .locals 0
 
@@ -105,6 +114,15 @@
     return-object p0
 .end method
 
+.method static bridge synthetic -$$Nest$fgetmFaceProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/function/Function;
+    .locals 0
+
+    .line 0
+    iget-object p0, p0, Lcom/android/server/biometrics/sensors/face/FaceService;->mFaceProvider:Ljava/util/function/Function;
+
+    return-object p0
+.end method
+
 .method static bridge synthetic -$$Nest$fgetmFaceProviderFunction(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/face/FaceService$FaceProviderFunction;
     .locals 0
 
-- 
2.45.2

